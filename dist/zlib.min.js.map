{"version":3,"file":"zlib.min.js","sources":["../src/mod.js","../dist-wasm/zlib-module.wasm?embed","../src/bundle.js","../dist-wasm/zlib-module.js?raw"],"sourcesContent":["// deno-lint-ignore-file no-this-alias\n/**\n * CompressionStream & DecompressionStream Polyfill\n */\n\nconst Z_NO_FLUSH = 0;\nconst Z_PARTIAL_FLUSH = 1;\nconst Z_SYNC_FLUSH = 2;\nconst Z_FULL_FLUSH = 3;\nconst Z_FINISH = 4;\nconst Z_OK = 0;\nconst Z_STREAM_END = 1;\nconst Z_DEFAULT_COMPRESSION = -1;\nconst FLUSH_MODES = {\n\tnone: Z_NO_FLUSH,\n\tpartial: Z_PARTIAL_FLUSH,\n\tsync: Z_SYNC_FLUSH,\n\tfull: Z_FULL_FLUSH,\n\tfinish: Z_FINISH,\n\tauto: Z_NO_FLUSH,\n};\n\nlet zlibModule;\n\nasync function initModule(moduleCode, wasmBinary) {\n\tconst moduleFunction = new Function([], `${moduleCode};return ZlibModule`);\n\tconst ZlibModuleFactory = moduleFunction([]);\n\tzlibModule = await ZlibModuleFactory({ wasmBinary });\n\treturn zlibModule;\n}\n\nclass ZlibCompressor {\n\tconstructor(level = Z_DEFAULT_COMPRESSION, format = \"deflate\") {\n\t\tconst zlibCompressor = this;\n\t\tzlibCompressor.level = level;\n\t\tzlibCompressor.format = format;\n\t\tzlibCompressor.streamPtr = null;\n\t\tzlibCompressor.inputPtr = null;\n\t\tzlibCompressor.outputPtr = null;\n\t\tzlibCompressor.inputSize = 32768;\n\t\tzlibCompressor.outputSize = 32768;\n\t\tzlibCompressor.initialized = false;\n\t}\n\n\tinitialize() {\n\t\tconst zlibCompressor = this;\n\t\tif (zlibCompressor.initialized) return;\n\t\tzlibCompressor.streamPtr = zlibModule._malloc(56);\n\t\tzlibCompressor.inputPtr = zlibModule._malloc(zlibCompressor.inputSize);\n\t\tzlibCompressor.outputPtr = zlibModule._malloc(zlibCompressor.outputSize);\n\t\tinitStream(zlibModule, zlibCompressor.streamPtr);\n\t\tconst result = zlibModule.ccall(\"deflateInit2_\", \"number\", [\n\t\t\t\"number\",\n\t\t\t\"number\",\n\t\t\t\"number\",\n\t\t\t\"number\",\n\t\t\t\"number\",\n\t\t\t\"number\",\n\t\t\t\"string\",\n\t\t\t\"number\",\n\t\t], [zlibCompressor.streamPtr, zlibCompressor.level, 8, getWindowBits(zlibCompressor.format), 8, 0, \"1.3.1.1-motley\", 56]);\n\t\tif (result !== 0) {\n\t\t\tthrow new Error(`Compression initialization failed: ${result}`);\n\t\t}\n\t\tzlibCompressor.initialized = true;\n\t}\n\n\tasync compress(data, finish = false, flushMode = \"auto\") {\n\t\tconst zlibCompressor = this;\n\t\tif (!zlibCompressor.initialized) {\n\t\t\tawait zlibCompressor.initialize();\n\t\t}\n\t\tif (data.length === 0 && !finish) {\n\t\t\treturn new Uint8Array(0);\n\t\t}\n\t\tif (data.length > zlibCompressor.inputSize) {\n\t\t\tconst results = [];\n\t\t\tlet offset = 0;\n\t\t\twhile (offset < data.length) {\n\t\t\t\tconst chunkSize = Math.min(zlibCompressor.inputSize, data.length - offset);\n\t\t\t\tconst chunk = data.slice(offset, offset + chunkSize);\n\t\t\t\tconst isLastChunk = offset + chunkSize >= data.length;\n\t\t\t\tconst chunkResult = await zlibCompressor.compressSingleChunk(chunk, finish && isLastChunk, flushMode);\n\t\t\t\tif (chunkResult.length > 0) {\n\t\t\t\t\tresults.push(chunkResult);\n\t\t\t\t}\n\n\t\t\t\toffset += chunkSize;\n\t\t\t}\n\t\t\tconst totalLength = results.reduce((sum, chunk) => sum + chunk.length, 0);\n\t\t\tconst combined = new Uint8Array(totalLength);\n\t\t\tlet combinedOffset = 0;\n\t\t\tfor (const result of results) {\n\t\t\t\tcombined.set(result, combinedOffset);\n\t\t\t\tcombinedOffset += result.length;\n\t\t\t}\n\t\t\treturn combined;\n\t\t}\n\t\treturn zlibCompressor.compressSingleChunk(data, finish, flushMode);\n\t}\n\n\tcompressSingleChunk(data, finish = false, flushMode = \"auto\") {\n\t\tconst zlibCompressor = this;\n\t\tif (data.length > zlibCompressor.inputSize) {\n\t\t\tthrow new Error(`Chunk size ${data.length} exceeds buffer size ${zlibCompressor.inputSize}`);\n\t\t}\n\t\tcopyToWasmMemory(zlibModule, data, zlibCompressor.inputPtr);\n\t\t\n\t\t// Use direct HEAP32 access for better performance (4-byte aligned 32-bit writes)\n\t\tconst streamPtrU32 = zlibCompressor.streamPtr >>> 2; // Convert to 32-bit index\n\t\tzlibModule.HEAPU32[streamPtrU32 + 0] = zlibCompressor.inputPtr;      // next_in (offset 0)\n\t\tzlibModule.HEAPU32[streamPtrU32 + 1] = data.length;                  // avail_in (offset 4)\n\t\tzlibModule.HEAPU32[streamPtrU32 + 3] = zlibCompressor.outputPtr;     // next_out (offset 12)\n\t\tzlibModule.HEAPU32[streamPtrU32 + 4] = zlibCompressor.outputSize;    // avail_out (offset 16)\n\t\t\n\t\tconst flushType = finish ? Z_FINISH : (FLUSH_MODES[flushMode] || Z_NO_FLUSH);\n\t\tconst result = zlibModule._deflate(zlibCompressor.streamPtr, flushType);\n\t\tif (result < 0 || (finish && result !== Z_STREAM_END) || (!finish && result !== Z_OK)) {\n\t\t\tthrow new Error(`Compression failed: ${result}`);\n\t\t}\n\t\t\n\t\tconst availOut = zlibModule.HEAPU32[streamPtrU32 + 4]; // avail_out (offset 16)\n\t\tconst outputLength = zlibCompressor.outputSize - availOut;\n\t\treturn copyFromWasmMemory(zlibModule, zlibCompressor.outputPtr, outputLength);\n\t}\n\n\tasync finish() {\n\t\tconst zlibCompressor = this;\n\t\tconst finalData = await zlibCompressor.compress(new Uint8Array(0), true);\n\t\tzlibCompressor.cleanup();\n\t\treturn finalData;\n\t}\n\n\tcleanup() {\n\t\tconst zlibCompressor = this;\n\t\tif (zlibModule && zlibCompressor.streamPtr) {\n\t\t\tzlibModule._deflateEnd(zlibCompressor.streamPtr);\n\t\t\tzlibModule._free(zlibCompressor.streamPtr);\n\t\t\tzlibModule._free(zlibCompressor.inputPtr);\n\t\t\tzlibModule._free(zlibCompressor.outputPtr);\n\t\t\tzlibCompressor.streamPtr = null;\n\t\t\tzlibCompressor.inputPtr = null;\n\t\t\tzlibCompressor.outputPtr = null;\n\t\t}\n\t\tzlibCompressor.initialized = false;\n\t}\n}\n\nclass ZlibDecompressor {\n\tconstructor(format = \"deflate\") {\n\t\tconst zlibDecompressor = this;\n\t\tzlibDecompressor.format = format;\n\t\tzlibDecompressor.streamPtr = null;\n\t\tzlibDecompressor.inputPtr = null;\n\t\tzlibDecompressor.outputPtr = null;\n\t\tzlibDecompressor.windowPtr = null;\n\t\tzlibDecompressor.inputSize = 32768;\n\t\tzlibDecompressor.outputSize = 32768;\n\t\tzlibDecompressor.initialized = false;\n\t\tzlibDecompressor.isDeflate64 = format === \"deflate64\" || format === \"deflate64-raw\";\n\t}\n\n\tinitialize() {\n\t\tconst zlibDecompressor = this;\n\t\tif (zlibDecompressor.initialized) return;\n\t\tzlibDecompressor.streamPtr = zlibModule._malloc(56);\n\t\tzlibDecompressor.inputPtr = zlibModule._malloc(zlibDecompressor.inputSize);\n\t\tzlibDecompressor.outputPtr = zlibModule._malloc(zlibDecompressor.outputSize);\n\t\tinitStream(zlibModule, zlibDecompressor.streamPtr);\n\t\tlet result;\n\t\tif (zlibDecompressor.isDeflate64) {\n\t\t\tzlibDecompressor.windowPtr = zlibModule._malloc(65536);\n\t\t\tresult = zlibModule.ccall(\"inflateBack9Init_\", \"number\", [\"number\", \"number\", \"string\", \"number\"], [\n\t\t\t\tzlibDecompressor.streamPtr,\n\t\t\t\tzlibDecompressor.windowPtr,\n\t\t\t\t\"1.3.1.1-motley\",\n\t\t\t\t56,\n\t\t\t]);\n\t\t} else {\n\t\t\tresult = zlibModule.ccall(\"inflateInit2_\", \"number\", [\"number\", \"number\", \"string\", \"number\"], [\n\t\t\t\tzlibDecompressor.streamPtr,\n\t\t\t\tgetWindowBits(zlibDecompressor.format),\n\t\t\t\t\"1.3.1.1-motley\",\n\t\t\t\t56,\n\t\t\t]);\n\t\t}\n\t\tif (result !== 0) {\n\t\t\tthrow new Error(`Decompression initialization failed: ${result}`);\n\t\t}\n\t\tzlibDecompressor.initialized = true;\n\t}\n\n\tasync decompress(data, finish = false, flushMode = \"auto\") {\n\t\tconst zlibDecompressor = this;\n\t\tif (!zlibDecompressor.initialized) {\n\t\t\tawait zlibDecompressor.initialize();\n\t\t}\n\t\tif (data.length === 0 && !finish) {\n\t\t\treturn new Uint8Array(0);\n\t\t}\n\t\tif (zlibDecompressor.isDeflate64) {\n\t\t\treturn zlibDecompressor.decompressDeflate64(data, finish);\n\t\t}\n\t\tconst results = [];\n\t\tlet totalInputProcessed = 0;\n\t\twhile (totalInputProcessed < data.length || finish) {\n\t\t\tconst remainingInput = data.length - totalInputProcessed;\n\t\t\tconst inputChunkSize = Math.min(remainingInput, zlibDecompressor.inputSize);\n\t\t\tif (inputChunkSize > 0) {\n\t\t\t\tcopyToWasmMemory(\n\t\t\t\t\tzlibModule,\n\t\t\t\t\tdata.subarray(totalInputProcessed, totalInputProcessed + inputChunkSize),\n\t\t\t\t\tzlibDecompressor.inputPtr,\n\t\t\t\t);\n\t\t\t}\n\t\t\t\n\t\t\t// Use direct HEAP32 access for better performance\n\t\t\tconst streamPtrU32 = zlibDecompressor.streamPtr >>> 2;\n\t\t\tzlibModule.HEAPU32[streamPtrU32 + 0] = zlibDecompressor.inputPtr;      // next_in (offset 0)\n\t\t\tzlibModule.HEAPU32[streamPtrU32 + 1] = inputChunkSize;                 // avail_in (offset 4)\n\t\t\tzlibModule.HEAPU32[streamPtrU32 + 3] = zlibDecompressor.outputPtr;     // next_out (offset 12)\n\t\t\tzlibModule.HEAPU32[streamPtrU32 + 4] = zlibDecompressor.outputSize;    // avail_out (offset 16)\n\t\t\t\n\t\t\tconst isLastChunk = totalInputProcessed + inputChunkSize >= data.length;\n\t\t\tconst flushType = (finish && isLastChunk) ? Z_FINISH : (FLUSH_MODES[flushMode] || Z_SYNC_FLUSH);\n\t\t\tconst result = zlibModule._inflate(zlibDecompressor.streamPtr, flushType);\n\t\t\tif (result < 0 && result !== -5) {\n\t\t\t\tthrow new Error(`Decompression failed: ${result}`);\n\t\t\t}\n\t\t\t\n\t\t\tconst availOut = zlibModule.HEAPU32[streamPtrU32 + 4]; // avail_out (offset 16)\n\t\t\tconst outputLength = zlibDecompressor.outputSize - availOut;\n\t\t\tif (outputLength > 0) {\n\t\t\t\tresults.push(copyFromWasmMemory(zlibModule, zlibDecompressor.outputPtr, outputLength));\n\t\t\t}\n\t\t\tconst inputProcessed = zlibModule.HEAPU32[streamPtrU32 + 1]; // avail_in (offset 4)\n\t\t\ttotalInputProcessed += inputChunkSize - inputProcessed;\n\t\t\tif (result === Z_STREAM_END) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (finish && isLastChunk && result !== Z_STREAM_END) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (totalInputProcessed < data.length) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\tconst totalLength = results.reduce((sum, chunk) => sum + chunk.length, 0);\n\t\tconst output = new Uint8Array(totalLength);\n\t\tlet offset = 0;\n\t\tfor (const chunk of results) {\n\t\t\toutput.set(chunk, offset);\n\t\t\toffset += chunk.length;\n\t\t}\n\t\treturn output;\n\t}\n\n\tdecompressDeflate64(data, finish) {\n\t\tconst zlibDecompressor = this;\n\t\tcopyToWasmMemory(zlibModule, data, zlibDecompressor.inputPtr);\n\t\t\n\t\t// Use direct HEAP32 access for better performance\n\t\tconst streamPtrU32 = zlibDecompressor.streamPtr >>> 2;\n\t\tzlibModule.HEAPU32[streamPtrU32 + 0] = zlibDecompressor.inputPtr;      // next_in (offset 0)\n\t\tzlibModule.HEAPU32[streamPtrU32 + 1] = data.length;                    // avail_in (offset 4)\n\t\tzlibModule.HEAPU32[streamPtrU32 + 2] = zlibDecompressor.outputPtr;     // next_out (offset 8)\n\t\tzlibModule.HEAPU32[streamPtrU32 + 3] = zlibDecompressor.outputSize;    // avail_out (offset 12)\n\t\t\n\t\tif (!zlibDecompressor.inflateBack9InFunc) {\n\t\t\tzlibDecompressor.inflateBack9InFunc = zlibModule.addFunction((_, buf) => {\n\t\t\t\tconst availIn = zlibModule.HEAPU32[streamPtrU32 + 1]; // avail_in (offset 4)\n\t\t\t\tif (availIn > 0) {\n\t\t\t\t\tconst nextIn = zlibModule.HEAPU32[streamPtrU32 + 0]; // next_in (offset 0)\n\t\t\t\t\tzlibModule.HEAPU32[buf >>> 2] = nextIn;\n\t\t\t\t\treturn availIn;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}, \"iii\");\n\t\t\tzlibDecompressor.inflateBack9OutFunc = zlibModule.addFunction((_, buf, len) => {\n\t\t\t\tconst nextOut = zlibModule.HEAPU32[streamPtrU32 + 2]; // next_out (offset 8)\n\t\t\t\tconst availOut = zlibModule.HEAPU32[streamPtrU32 + 3]; // avail_out (offset 12)\n\t\t\t\tconst copyLen = Math.min(len, availOut);\n\t\t\t\t\n\t\t\t\t// Use direct HEAP8 copy for byte-level operations\n\t\t\t\tfor (let i = 0; i < copyLen; i++) {\n\t\t\t\t\tzlibModule.HEAPU8[nextOut + i] = zlibModule.HEAPU8[buf + i];\n\t\t\t\t}\n\t\t\t\tzlibModule.HEAPU32[streamPtrU32 + 2] = nextOut + copyLen;      // next_out\n\t\t\t\tzlibModule.HEAPU32[streamPtrU32 + 3] = availOut - copyLen;     // avail_out\n\n\t\t\t\treturn 0;\n\t\t\t}, \"iiii\");\n\t\t}\n\t\tconst result = zlibModule.ccall(\"inflateBack9\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\"], [\n\t\t\tzlibDecompressor.streamPtr,\n\t\t\tzlibDecompressor.inflateBack9InFunc,\n\t\t\t0,\n\t\t\tzlibDecompressor.inflateBack9OutFunc,\n\t\t\t0,\n\t\t]);\n\t\tif (finish ? result !== 1 : (result !== 0 && result !== 1)) {\n\t\t\tconst msg = finish ? \"expected end of stream but got error code\" : \"failed with error code\";\n\t\t\tthrow new Error(`Deflate64 decompression ${finish ? \"incomplete: \" + msg : msg}: ${result}`);\n\t\t}\n\t\tconst outputLength = zlibModule.HEAPU32[streamPtrU32 + 2] - zlibDecompressor.outputPtr; // next_out (offset 8)\n\t\treturn copyFromWasmMemory(zlibModule, zlibDecompressor.outputPtr, outputLength);\n\t}\n\n\tasync finish() {\n\t\tconst zlibDecompressor = this;\n\t\tconst finalData = await zlibDecompressor.decompress(new Uint8Array(0), true);\n\t\tzlibDecompressor.cleanup();\n\t\treturn finalData;\n\t}\n\n\tcleanup() {\n\t\tconst zlibDecompressor = this;\n\t\tif (zlibModule && zlibDecompressor.streamPtr) {\n\t\t\tif (zlibDecompressor.isDeflate64) {\n\t\t\t\tzlibModule._inflateBack9End(zlibDecompressor.streamPtr);\n\t\t\t\tif (zlibDecompressor.windowPtr) {\n\t\t\t\t\tzlibModule._free(zlibDecompressor.windowPtr);\n\t\t\t\t\tzlibDecompressor.windowPtr = null;\n\t\t\t\t}\n\t\t\t\tif (zlibDecompressor.inflateBack9InFunc) {\n\t\t\t\t\tzlibModule.removeFunction(zlibDecompressor.inflateBack9InFunc);\n\t\t\t\t\tzlibDecompressor.inflateBack9InFunc = null;\n\t\t\t\t}\n\t\t\t\tif (zlibDecompressor.inflateBack9OutFunc) {\n\t\t\t\t\tzlibModule.removeFunction(zlibDecompressor.inflateBack9OutFunc);\n\t\t\t\t\tzlibDecompressor.inflateBack9OutFunc = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tzlibModule._inflateEnd(zlibDecompressor.streamPtr);\n\t\t\t}\n\t\t\tzlibModule._free(zlibDecompressor.streamPtr);\n\t\t\tzlibModule._free(zlibDecompressor.inputPtr);\n\t\t\tzlibModule._free(zlibDecompressor.outputPtr);\n\t\t\tzlibDecompressor.streamPtr = null;\n\t\t\tzlibDecompressor.inputPtr = null;\n\t\t\tzlibDecompressor.outputPtr = null;\n\t\t}\n\t\tzlibDecompressor.initialized = false;\n\t}\n}\n\nclass BaseStreamPolyfill {\n\tconstructor(format, processorClass, methodName, processorArgs = []) {\n\t\tconst baseProcessor = this;\n\t\tbaseProcessor.format = format;\n\t\tbaseProcessor.createTransformStream(processorClass, methodName, processorArgs);\n\t}\n\n\tcreateTransformStream(ProcessorClass, methodName, processorArgs) {\n\t\tconst baseProcessor = this;\n\t\tlet processor;\n\t\tconst transformStream = new TransformStream({\n\t\t\tstart: async () => {\n\t\t\t\tprocessor = new ProcessorClass(...processorArgs, baseProcessor.format);\n\t\t\t\tawait processor.initialize();\n\t\t\t},\n\t\t\ttransform: async (chunk, controller) => {\n\t\t\t\tconst data = convertChunkToUint8Array(chunk);\n\t\t\t\tconst result = await processor[methodName](data, false);\n\t\t\t\tif (result.length > 0) {\n\t\t\t\t\tcontroller.enqueue(result);\n\t\t\t\t}\n\t\t\t},\n\t\t\tflush: async (controller) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst finalData = await processor.finish();\n\t\t\t\t\tif (finalData.length > 0) {\n\t\t\t\t\t\tcontroller.enqueue(finalData);\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tprocessor.cleanup();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tbaseProcessor._readable = transformStream.readable;\n\t\tbaseProcessor._writable = transformStream.writable;\n\t}\n\n\tget readable() {\n\t\treturn this._readable;\n\t}\n\tset readable(value) {\n\t\tthis._readable = value;\n\t}\n\tget writable() {\n\t\treturn this._writable;\n\t}\n\tset writable(value) {\n\t\tthis._writable = value;\n\t}\n}\n\nclass CompressionStream extends BaseStreamPolyfill {\n\tconstructor(format, options = {}) {\n\t\tconst level = options.level !== undefined ? options.level : 6;\n\t\tsuper(format, ZlibCompressor, \"compress\", [level]);\n\t}\n}\n\nclass DecompressionStream extends BaseStreamPolyfill {\n\tconstructor(format) {\n\t\tsuper(format, ZlibDecompressor, \"decompress\");\n\t}\n}\n\nexport { CompressionStream, DecompressionStream, initModule };\n\nfunction getWindowBits(format) {\n\tswitch (format) {\n\t\tcase \"deflate\":\n\t\t\treturn 15;\n\t\tcase \"deflate-raw\":\n\t\t\treturn -15;\n\t\tcase \"gzip\":\n\t\t\treturn 31;\n\t\tdefault:\n\t\t\tthrow new Error(`Unsupported format: ${format}`);\n\t}\n}\n\nfunction copyToWasmMemory(zlibModule, sourceData, targetPtr) {\n\t// Use direct HEAP8 access for maximum performance\n\tzlibModule.HEAPU8.set(sourceData, targetPtr);\n}\n\nfunction copyFromWasmMemory(zlibModule, sourcePtr, length) {\n\t// Use direct HEAP8 access for maximum performance\n\treturn zlibModule.HEAPU8.slice(sourcePtr, sourcePtr + length);\n}\n\nfunction initStream(zlibModule, streamPtr) {\n\t// Use direct HEAP8 access with fill for maximum performance\n\tzlibModule.HEAPU8.fill(0, streamPtr, streamPtr + 56);\n}\n\nfunction convertChunkToUint8Array(chunk) {\n\tif (chunk instanceof ArrayBuffer) {\n\t\treturn new Uint8Array(chunk);\n\t} else if (chunk instanceof Uint8Array) {\n\t\treturn chunk;\n\t} else if (ArrayBuffer.isView(chunk)) {\n\t\treturn new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n\t}\n}\n","export default \"\";","import { CompressionStream, DecompressionStream, initModule } from \"./mod.js\";\nimport wasmBase64 from \"../dist-wasm/zlib-module.wasm?embed\";\nimport moduleCode from \"../dist-wasm/zlib-module.js?raw\";\n\nconst wasmBinary = Uint8Array.from(atob(wasmBase64), (c) => c.charCodeAt(0));\nawait initModule(moduleCode, wasmBinary);\n\nexport { CompressionStream, DecompressionStream };\n","export default \"var ZlibModule=(()=>{var _scriptName=typeof document!=\\\"undefined\\\"?document.currentScript?.src:undefined;return async function(moduleArg={}){var moduleRtn;var b=moduleArg,aa=\\\"object\\\"==typeof window,n=\\\"undefined\\\"!=typeof WorkerGlobalScope;n&&(_scriptName=self.location.href);var q=\\\"\\\",r,t;\\nif(aa||n){try{q=(new URL(\\\".\\\",_scriptName)).href}catch{}n&&(t=a=>{var c=new XMLHttpRequest;c.open(\\\"GET\\\",a,!1);c.responseType=\\\"arraybuffer\\\";c.send(null);return new Uint8Array(c.response)});r=async a=>{if(w(a))return new Promise((d,e)=>{var g=new XMLHttpRequest;g.open(\\\"GET\\\",a,!0);g.responseType=\\\"arraybuffer\\\";g.onload=()=>{200==g.status||0==g.status&&g.response?d(g.response):e(g.status)};g.onerror=e;g.send(null)});var c=await fetch(a,{credentials:\\\"same-origin\\\"});if(c.ok)return c.arrayBuffer();throw Error(c.status+\\n\\\" : \\\"+c.url);}}var x=console.error.bind(console),y,z=!1,A,w=a=>a.startsWith(\\\"file://\\\"),B,C,D,G,H,I=!1;function J(){var a=D.buffer;b.HEAP8=G=new Int8Array(a);new Int16Array(a);b.HEAPU8=H=new Uint8Array(a);new Uint16Array(a);b.HEAP32=new Int32Array(a);b.HEAPU32=new Uint32Array(a);new Float32Array(a);new Float64Array(a);new BigInt64Array(a);new BigUint64Array(a)}var K=0,L=null;\\nfunction M(a){b.onAbort?.(a);a=\\\"Aborted(\\\"+a+\\\")\\\";x(a);z=!0;a=new WebAssembly.RuntimeError(a+\\\". Build with -sASSERTIONS for more info.\\\");C?.(a);throw a;}var N;async function ba(a){if(!y)try{var c=await r(a);return new Uint8Array(c)}catch{}if(a==N&&y)a=new Uint8Array(y);else if(t)a=t(a);else throw\\\"both async and sync fetching of the wasm failed\\\";return a}\\nasync function ca(a,c){try{var d=await ba(a);return await WebAssembly.instantiate(d,c)}catch(e){x(`failed to asynchronously prepare wasm: ${e}`),M(e)}}async function da(a){var c=N;if(!y&&!w(c))try{var d=fetch(c,{credentials:\\\"same-origin\\\"});return await WebAssembly.instantiateStreaming(d,a)}catch(e){x(`wasm streaming compile failed: ${e}`),x(\\\"falling back to ArrayBuffer instantiation\\\")}return ca(c,a)}\\nclass O{name=\\\"ExitStatus\\\";constructor(a){this.message=`Program terminated with exit(${a})`;this.status=a}}\\nvar P=a=>{for(;0<a.length;)a.shift()(b)},Q=[],ea=[],ha=()=>{var a=b.preRun.shift();ea.push(a)},R=!0,S=0,T={},ia=a=>{if(!(a instanceof O||\\\"unwind\\\"==a))throw a;},ja=a=>{A=a;R||0<S||(b.onExit?.(a),z=!0);throw new O(a);},ka=a=>{if(!z)try{if(a(),!(R||0<S))try{A=a=A,ja(a)}catch(c){ia(c)}}catch(c){ia(c)}},la=new TextDecoder,ma=a=>{const c=a.length;return[c%128|128,c>>7,...a]},na={i:127,p:127,j:126,f:125,d:124,e:111},oa=a=>ma(Array.from(a,c=>na[c])),U,V,W=[];b.noExitRuntime&&(R=b.noExitRuntime);\\nb.printErr&&(x=b.printErr);b.wasmBinary&&(y=b.wasmBinary);\\nb.ccall=(a,c,d,e)=>{var g={string:h=>{var k=0;if(null!==h&&void 0!==h&&0!==h){for(var f=k=0;f<h.length;++f){var l=h.charCodeAt(f);127>=l?k++:2047>=l?k+=2:55296<=l&&57343>=l?(k+=4,++f):k+=3}var p=k+1;k=X(p);l=H;f=k>>>0;if(0<p){p=f+p-1;for(var E=0;E<h.length;++E){var m=h.codePointAt(E);if(127>=m){if(f>=p)break;l[f++>>>0]=m}else if(2047>=m){if(f+1>=p)break;l[f++>>>0]=192|m>>6;l[f++>>>0]=128|m&63}else if(65535>=m){if(f+2>=p)break;l[f++>>>0]=224|m>>12;l[f++>>>0]=128|m>>6&63;l[f++>>>0]=128|m&63}else{if(f+\\n3>=p)break;l[f++>>>0]=240|m>>18;l[f++>>>0]=128|m>>12&63;l[f++>>>0]=128|m>>6&63;l[f++>>>0]=128|m&63;E++}}l[f>>>0]=0}}return k},array:h=>{var k=X(h.length);G.set(h,k>>>0);return k}};a=b[\\\"_\\\"+a];var u=[],F=0;if(e)for(var v=0;v<e.length;v++){var fa=g[d[v]];fa?(0===F&&(F=pa()),u[v]=fa(e[v])):u[v]=e[v]}d=a(...u);return d=function(h){0!==F&&qa(F);if(\\\"string\\\"===c)if(h>>>=0){for(var k=h,f=H,l=k+void 0;f[k]&&!(k>=l);)++k;h=la.decode(H.subarray(h>>>0,k>>>0))}else h=\\\"\\\";else h=\\\"boolean\\\"===c?!!h:h;return h}(d)};\\nb.addFunction=(a,c)=>{if(!V){V=new WeakMap;var d=U.length;if(V)for(var e=0;e<0+d;e++){var g=U.get(e);g&&V.set(g,e)}}if(d=V.get(a)||0)return d;d=W.length?W.pop():U.grow(1);try{U.set(d,a)}catch(u){if(!(u instanceof TypeError))throw u;c=Uint8Array.of(0,97,115,109,1,0,0,0,1,...ma([1,96,...oa(c.slice(1)),...oa(\\\"v\\\"===c[0]?\\\"\\\":c[0])]),2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0);c=new WebAssembly.Module(c);c=(new WebAssembly.Instance(c,{e:{f:a}})).exports.f;U.set(d,c)}V.set(a,d);return d};\\nb.removeFunction=a=>{V.delete(U.get(a));U.set(a,null);W.push(a)};\\nvar ra,qa,X,pa,sa={c:()=>M(\\\"\\\"),b:()=>{R=!1;S=0},d:(a,c)=>{T[a]&&(clearTimeout(T[a].id),delete T[a]);if(!c)return 0;var d=setTimeout(()=>{delete T[a];ka(()=>ra(a,performance.now()))},c);T[a]={id:d,A:c};return 0},e:function(a){a>>>=0;var c=H.length;if(4294901760<a)return!1;for(var d=1;4>=d;d*=2){var e=c*(1+.2/d);e=Math.min(e,a+100663296);a:{e=(Math.min(4294901760,65536*Math.ceil(Math.max(a,e)/65536))-D.buffer.byteLength+65535)/65536|0;try{D.grow(e);J();var g=1;break a}catch(u){}g=void 0}if(g)return!0}return!1},\\na:ja},Y=await (async function(){function a(d){Y=d.exports;Y=ta();D=Y.f;J();U=Y.t;d=Y;b._deflate=d.h;b._deflateEnd=d.i;b._deflateInit2_=d.j;b._inflateInit2_=d.k;b._inflate=d.l;b._inflateEnd=d.m;b._malloc=d.n;b._free=d.o;b._inflateBack9Init_=d.p;b._inflateBack9=d.q;b._inflateBack9End=d.r;ra=d.s;qa=d.u;X=d.v;pa=d.w;K--;b.monitorRunDependencies?.(K);0==K&&L&&(d=L,L=null,d());return Y}K++;b.monitorRunDependencies?.(K);var c={a:sa};if(b.instantiateWasm)return new Promise(d=>{b.instantiateWasm(c,\\n(e,g)=>{d(a(e,g))})});N??=b.locateFile?b.locateFile(\\\"zlib-module.wasm\\\",q):q+\\\"zlib-module.wasm\\\";return a((await da(c)).instance)}());function ta(){var a=Y;a=Object.assign({},a);var c=d=>e=>d(e)>>>0;a.n=c(a.n);a.v=c(a.v);a.w=(d=>()=>d()>>>0)(a.w);return a}\\nfunction Z(){function a(){b.calledRun=!0;if(!z){I=!0;Y.g();B?.(b);b.onRuntimeInitialized?.();if(b.postRun)for(\\\"function\\\"==typeof b.postRun&&(b.postRun=[b.postRun]);b.postRun.length;){var c=b.postRun.shift();Q.push(c)}P(Q)}}if(0<K)L=Z;else{if(b.preRun)for(\\\"function\\\"==typeof b.preRun&&(b.preRun=[b.preRun]);b.preRun.length;)ha();P(ea);0<K?L=Z:b.setStatus?(b.setStatus(\\\"Running...\\\"),setTimeout(()=>{setTimeout(()=>b.setStatus(\\\"\\\"),1);a()},1)):a()}}\\nif(b.preInit)for(\\\"function\\\"==typeof b.preInit&&(b.preInit=[b.preInit]);0<b.preInit.length;)b.preInit.shift()();Z();I?moduleRtn=b:moduleRtn=new Promise((a,c)=>{B=a;C=c});\\n;return moduleRtn}})();if(typeof exports===\\\"object\\\"&&typeof module===\\\"object\\\"){module.exports=ZlibModule;module.exports.default=ZlibModule}else if(typeof define===\\\"function\\\"&&define[\\\"amd\\\"])define([],()=>ZlibModule);\\n\""],"names":["FLUSH_MODES","none","partial","sync","full","finish","auto","zlibModule","ZlibCompressor","constructor","level","format","zlibCompressor","this","streamPtr","inputPtr","outputPtr","inputSize","outputSize","initialized","initialize","_malloc","initStream","result","ccall","getWindowBits","Error","compress","data","flushMode","length","Uint8Array","results","offset","chunkSize","Math","min","chunk","slice","isLastChunk","chunkResult","compressSingleChunk","push","totalLength","reduce","sum","combined","combinedOffset","set","copyToWasmMemory","streamPtrU32","HEAPU32","flushType","_deflate","availOut","outputLength","copyFromWasmMemory","finalData","cleanup","_deflateEnd","_free","ZlibDecompressor","zlibDecompressor","windowPtr","isDeflate64","decompress","decompressDeflate64","totalInputProcessed","remainingInput","inputChunkSize","subarray","_inflate","output","inflateBack9InFunc","addFunction","_","buf","availIn","nextIn","inflateBack9OutFunc","len","nextOut","copyLen","i","HEAPU8","msg","_inflateBack9End","removeFunction","_inflateEnd","BaseStreamPolyfill","processorClass","methodName","processorArgs","createTransformStream","ProcessorClass","baseProcessor","processor","transformStream","TransformStream","start","async","transform","controller","ArrayBuffer","isView","buffer","byteOffset","byteLength","convertChunkToUint8Array","enqueue","flush","_readable","readable","_writable","writable","value","CompressionStream","options","super","DecompressionStream","sourceData","targetPtr","sourcePtr","fill","wasmBinary","from","atob","c","charCodeAt","moduleCode","ZlibModuleFactory","Function","moduleFunction","initModule"],"mappings":"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"}