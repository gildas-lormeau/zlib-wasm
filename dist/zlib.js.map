{"version":3,"file":"zlib.js","sources":["../src/mod.js","../dist-wasm/zlib-module.wasm?embed","../dist-wasm/zlib-module.js?raw","../src/bundle.js"],"sourcesContent":["/**\n * CompressionStream & DecompressionStream Polyfill\n */\n\nconst Z_NO_FLUSH = 0;\nconst Z_PARTIAL_FLUSH = 1;\nconst Z_SYNC_FLUSH = 2;\nconst Z_FULL_FLUSH = 3;\nconst Z_FINISH = 4;\nconst Z_OK = 0;\nconst Z_STREAM_END = 1;\nconst Z_DEFAULT_COMPRESSION = -1;\nconst FLUSH_MODES = {\n\tnone: Z_NO_FLUSH,\n\tpartial: Z_PARTIAL_FLUSH,\n\tsync: Z_SYNC_FLUSH,\n\tfull: Z_FULL_FLUSH,\n\tfinish: Z_FINISH,\n\tauto: Z_NO_FLUSH,\n};\n\nlet zlibModule;\n\nasync function initModule(moduleCode, wasmBinary) {\n\tconst moduleFunction = new Function([], `${moduleCode};return ZlibModule`);\n\tconst ZlibModuleFactory = moduleFunction([]);\n\tzlibModule = await ZlibModuleFactory({ wasmBinary });\n\treturn zlibModule;\n}\n\nclass ZlibCompressor {\n\tconstructor(level = Z_DEFAULT_COMPRESSION, format = \"deflate\") {\n\t\tthis.level = level;\n\t\tthis.format = format;\n\t\tthis.streamPtr = null;\n\t\tthis.inputPtr = null;\n\t\tthis.outputPtr = null;\n\t\tthis.inputSize = 32768;\n\t\tthis.outputSize = 32768;\n\t\tthis.initialized = false;\n\t}\n\n\tinitialize() {\n\t\tif (this.initialized) return;\n\t\tthis.streamPtr = zlibModule._malloc(56);\n\t\tthis.inputPtr = zlibModule._malloc(this.inputSize);\n\t\tthis.outputPtr = zlibModule._malloc(this.outputSize);\n\t\tinitStream(zlibModule, this.streamPtr);\n\t\tconst result = zlibModule.ccall(\"deflateInit2_\", \"number\", [\n\t\t\t\"number\",\n\t\t\t\"number\",\n\t\t\t\"number\",\n\t\t\t\"number\",\n\t\t\t\"number\",\n\t\t\t\"number\",\n\t\t\t\"string\",\n\t\t\t\"number\",\n\t\t], [this.streamPtr, this.level, 8, getWindowBits(this.format), 8, 0, \"1.3.1.1-motley\", 56]);\n\t\tif (result !== 0) {\n\t\t\tthrow new Error(`Compression initialization failed: ${result}`);\n\t\t}\n\t\tthis.initialized = true;\n\t}\n\n\tasync compress(data, finish = false, flushMode = \"auto\") {\n\t\tif (!this.initialized) {\n\t\t\tawait this.initialize();\n\t\t}\n\t\tif (data.length === 0 && !finish) {\n\t\t\treturn new Uint8Array(0);\n\t\t}\n\n\t\t// Handle large data by chunking\n\t\tif (data.length > this.inputSize) {\n\t\t\tconst results = [];\n\t\t\tlet offset = 0;\n\n\t\t\t// Process data in chunks\n\t\t\twhile (offset < data.length) {\n\t\t\t\tconst chunkSize = Math.min(this.inputSize, data.length - offset);\n\t\t\t\tconst chunk = data.slice(offset, offset + chunkSize);\n\t\t\t\tconst isLastChunk = offset + chunkSize >= data.length;\n\n\t\t\t\t// Only finish on the last chunk if finish is requested\n\t\t\t\tconst chunkResult = await this.compressSingleChunk(chunk, finish && isLastChunk, flushMode);\n\t\t\t\tif (chunkResult.length > 0) {\n\t\t\t\t\tresults.push(chunkResult);\n\t\t\t\t}\n\n\t\t\t\toffset += chunkSize;\n\t\t\t}\n\n\t\t\t// Combine all results\n\t\t\tconst totalLength = results.reduce((sum, chunk) => sum + chunk.length, 0);\n\t\t\tconst combined = new Uint8Array(totalLength);\n\t\t\tlet combinedOffset = 0;\n\t\t\tfor (const result of results) {\n\t\t\t\tcombined.set(result, combinedOffset);\n\t\t\t\tcombinedOffset += result.length;\n\t\t\t}\n\t\t\treturn combined;\n\t\t}\n\n\t\t// For small data, use original logic\n\t\treturn this.compressSingleChunk(data, finish, flushMode);\n\t}\n\n\tcompressSingleChunk(data, finish = false, flushMode = \"auto\") {\n\t\tif (data.length > this.inputSize) {\n\t\t\tthrow new Error(`Chunk size ${data.length} exceeds buffer size ${this.inputSize}`);\n\t\t}\n\n\t\tcopyToWasmMemory(zlibModule, data, this.inputPtr);\n\t\tzlibModule.setValue(this.streamPtr + 0, this.inputPtr, \"i32\");\n\t\tzlibModule.setValue(this.streamPtr + 4, data.length, \"i32\");\n\t\tzlibModule.setValue(this.streamPtr + 12, this.outputPtr, \"i32\");\n\t\tzlibModule.setValue(this.streamPtr + 16, this.outputSize, \"i32\");\n\t\tconst flushType = finish ? Z_FINISH : (FLUSH_MODES[flushMode] || Z_NO_FLUSH);\n\t\tconst result = zlibModule._deflate(this.streamPtr, flushType);\n\t\tif (result < 0 || (finish && result !== Z_STREAM_END) || (!finish && result !== Z_OK)) {\n\t\t\tthrow new Error(`Compression failed: ${result}`);\n\t\t}\n\t\tconst availOut = zlibModule.getValue(this.streamPtr + 16, \"i32\");\n\t\tconst outputLength = this.outputSize - availOut;\n\t\treturn copyFromWasmMemory(zlibModule, this.outputPtr, outputLength);\n\t}\n\n\tasync finish() {\n\t\tconst finalData = await this.compress(new Uint8Array(0), true);\n\t\tthis.cleanup();\n\t\treturn finalData;\n\t}\n\n\tcleanup() {\n\t\tif (zlibModule && this.streamPtr) {\n\t\t\tzlibModule._deflateEnd(this.streamPtr);\n\t\t\tzlibModule._free(this.streamPtr);\n\t\t\tzlibModule._free(this.inputPtr);\n\t\t\tzlibModule._free(this.outputPtr);\n\t\t\tthis.streamPtr = null;\n\t\t\tthis.inputPtr = null;\n\t\t\tthis.outputPtr = null;\n\t\t}\n\t\tthis.initialized = false;\n\t}\n}\n\nclass ZlibDecompressor {\n\tconstructor(format = \"deflate\") {\n\t\tthis.format = format;\n\t\tthis.streamPtr = null;\n\t\tthis.inputPtr = null;\n\t\tthis.outputPtr = null;\n\t\tthis.windowPtr = null;\n\t\tthis.inputSize = 32768;\n\t\tthis.outputSize = 32768;\n\t\tthis.initialized = false;\n\t\tthis.isDeflate64 = format === \"deflate64\" || format === \"deflate64-raw\";\n\t}\n\n\tinitialize() {\n\t\tif (this.initialized) return;\n\t\tthis.streamPtr = zlibModule._malloc(56);\n\t\tthis.inputPtr = zlibModule._malloc(this.inputSize);\n\t\tthis.outputPtr = zlibModule._malloc(this.outputSize);\n\t\tinitStream(zlibModule, this.streamPtr);\n\t\tlet result;\n\t\tif (this.isDeflate64) {\n\t\t\tthis.windowPtr = zlibModule._malloc(65536);\n\t\t\tresult = zlibModule.ccall(\"inflateBack9Init_\", \"number\", [\"number\", \"number\", \"string\", \"number\"], [\n\t\t\t\tthis.streamPtr,\n\t\t\t\tthis.windowPtr,\n\t\t\t\t\"1.3.1.1-motley\",\n\t\t\t\t56,\n\t\t\t]);\n\t\t} else {\n\t\t\tresult = zlibModule.ccall(\"inflateInit2_\", \"number\", [\"number\", \"number\", \"string\", \"number\"], [\n\t\t\t\tthis.streamPtr,\n\t\t\t\tgetWindowBits(this.format),\n\t\t\t\t\"1.3.1.1-motley\",\n\t\t\t\t56,\n\t\t\t]);\n\t\t}\n\t\tif (result !== 0) {\n\t\t\tthrow new Error(`Decompression initialization failed: ${result}`);\n\t\t}\n\t\tthis.initialized = true;\n\t}\n\n\tasync decompress(data, finish = false, flushMode = \"auto\") {\n\t\tif (!this.initialized) {\n\t\t\tawait this.initialize();\n\t\t}\n\t\tif (data.length === 0 && !finish) {\n\t\t\treturn new Uint8Array(0);\n\t\t}\n\t\tif (this.isDeflate64) {\n\t\t\treturn this.decompressDeflate64(data, finish);\n\t\t}\n\t\tconst results = [];\n\t\tlet totalInputProcessed = 0;\n\t\twhile (totalInputProcessed < data.length || finish) {\n\t\t\tconst remainingInput = data.length - totalInputProcessed;\n\t\t\tconst inputChunkSize = Math.min(remainingInput, this.inputSize);\n\t\t\tif (inputChunkSize > 0) {\n\t\t\t\tcopyToWasmMemory(\n\t\t\t\t\tzlibModule,\n\t\t\t\t\tdata.subarray(totalInputProcessed, totalInputProcessed + inputChunkSize),\n\t\t\t\t\tthis.inputPtr,\n\t\t\t\t);\n\t\t\t}\n\t\t\tzlibModule.setValue(this.streamPtr + 0, this.inputPtr, \"i32\");\n\t\t\tzlibModule.setValue(this.streamPtr + 4, inputChunkSize, \"i32\");\n\t\t\tzlibModule.setValue(this.streamPtr + 12, this.outputPtr, \"i32\");\n\t\t\tzlibModule.setValue(this.streamPtr + 16, this.outputSize, \"i32\");\n\t\t\tconst isLastChunk = totalInputProcessed + inputChunkSize >= data.length;\n\t\t\tconst flushType = (finish && isLastChunk) ? Z_FINISH : (FLUSH_MODES[flushMode] || Z_SYNC_FLUSH);\n\t\t\tconst result = zlibModule._inflate(this.streamPtr, flushType);\n\t\t\tif (result < 0 && result !== -5) {\n\t\t\t\tthrow new Error(`Decompression failed: ${result}`);\n\t\t\t}\n\t\t\tconst availOut = zlibModule.getValue(this.streamPtr + 16, \"i32\");\n\t\t\tconst outputLength = this.outputSize - availOut;\n\t\t\tif (outputLength > 0) {\n\t\t\t\tresults.push(copyFromWasmMemory(zlibModule, this.outputPtr, outputLength));\n\t\t\t}\n\t\t\tconst inputProcessed = zlibModule.getValue(this.streamPtr + 4, \"i32\");\n\t\t\ttotalInputProcessed += inputChunkSize - inputProcessed;\n\t\t\tif (result === Z_STREAM_END) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (finish && isLastChunk && result !== Z_STREAM_END) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (totalInputProcessed < data.length) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\tconst totalLength = results.reduce((sum, chunk) => sum + chunk.length, 0);\n\t\tconst output = new Uint8Array(totalLength);\n\t\tlet offset = 0;\n\t\tfor (const chunk of results) {\n\t\t\toutput.set(chunk, offset);\n\t\t\toffset += chunk.length;\n\t\t}\n\t\treturn output;\n\t}\n\n\tdecompressDeflate64(data, finish) {\n\t\tcopyToWasmMemory(zlibModule, data, this.inputPtr);\n\t\tzlibModule.setValue(this.streamPtr + 0, this.inputPtr, \"i32\");\n\t\tzlibModule.setValue(this.streamPtr + 4, data.length, \"i32\");\n\t\tzlibModule.setValue(this.streamPtr + 8, this.outputPtr, \"i32\");\n\t\tzlibModule.setValue(this.streamPtr + 12, this.outputSize, \"i32\");\n\t\tif (!this.inflateBack9InFunc) {\n\t\t\tthis.inflateBack9InFunc = zlibModule.addFunction((_, buf) => {\n\t\t\t\tconst availIn = zlibModule.getValue(this.streamPtr + 4, \"i32\");\n\t\t\t\tif (availIn > 0) {\n\t\t\t\t\tconst nextIn = zlibModule.getValue(this.streamPtr + 0, \"i32\");\n\t\t\t\t\tzlibModule.setValue(buf, nextIn, \"i32\");\n\t\t\t\t\treturn availIn;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}, \"iii\");\n\t\t\tthis.inflateBack9OutFunc = zlibModule.addFunction((_, buf, len) => {\n\t\t\t\tconst nextOut = zlibModule.getValue(this.streamPtr + 8, \"i32\");\n\t\t\t\tconst availOut = zlibModule.getValue(this.streamPtr + 12, \"i32\");\n\t\t\t\tconst copyLen = Math.min(len, availOut);\n\t\t\t\tfor (let i = 0; i < copyLen; i++) {\n\t\t\t\t\tconst value = zlibModule.getValue(buf + i, \"i8\");\n\t\t\t\t\tzlibModule.setValue(nextOut + i, value, \"i8\");\n\t\t\t\t}\n\t\t\t\tzlibModule.setValue(this.streamPtr + 8, nextOut + copyLen, \"i32\");\n\t\t\t\tzlibModule.setValue(this.streamPtr + 12, availOut - copyLen, \"i32\");\n\n\t\t\t\treturn 0;\n\t\t\t}, \"iiii\");\n\t\t}\n\t\tconst result = zlibModule.ccall(\"inflateBack9\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\"], [\n\t\t\tthis.streamPtr,\n\t\t\tthis.inflateBack9InFunc,\n\t\t\t0,\n\t\t\tthis.inflateBack9OutFunc,\n\t\t\t0,\n\t\t]);\n\t\tif (finish ? result !== 1 : (result !== 0 && result !== 1)) {\n\t\t\tconst msg = finish ? \"expected end of stream but got error code\" : \"failed with error code\";\n\t\t\tthrow new Error(`Deflate64 decompression ${finish ? \"incomplete: \" + msg : msg}: ${result}`);\n\t\t}\n\t\tconst outputLength = zlibModule.getValue(this.streamPtr + 8, \"i32\") - this.outputPtr;\n\t\treturn copyFromWasmMemory(zlibModule, this.outputPtr, outputLength);\n\t}\n\n\tasync finish() {\n\t\tconst finalData = await this.decompress(new Uint8Array(0), true);\n\t\tthis.cleanup();\n\t\treturn finalData;\n\t}\n\n\tcleanup() {\n\t\tif (zlibModule && this.streamPtr) {\n\t\t\tif (this.isDeflate64) {\n\t\t\t\tzlibModule._inflateBack9End(this.streamPtr);\n\t\t\t\tif (this.windowPtr) {\n\t\t\t\t\tzlibModule._free(this.windowPtr);\n\t\t\t\t\tthis.windowPtr = null;\n\t\t\t\t}\n\t\t\t\tif (this.inflateBack9InFunc) {\n\t\t\t\t\tzlibModule.removeFunction(this.inflateBack9InFunc);\n\t\t\t\t\tthis.inflateBack9InFunc = null;\n\t\t\t\t}\n\t\t\t\tif (this.inflateBack9OutFunc) {\n\t\t\t\t\tzlibModule.removeFunction(this.inflateBack9OutFunc);\n\t\t\t\t\tthis.inflateBack9OutFunc = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tzlibModule._inflateEnd(this.streamPtr);\n\t\t\t}\n\t\t\tzlibModule._free(this.streamPtr);\n\t\t\tzlibModule._free(this.inputPtr);\n\t\t\tzlibModule._free(this.outputPtr);\n\t\t\tthis.streamPtr = null;\n\t\t\tthis.inputPtr = null;\n\t\t\tthis.outputPtr = null;\n\t\t}\n\t\tthis.initialized = false;\n\t}\n}\n\nclass BaseStreamPolyfill {\n\tconstructor(format, processorClass, methodName, processorArgs = []) {\n\t\tthis.format = format;\n\t\tthis.createTransformStream(processorClass, methodName, processorArgs);\n\t}\n\n\tcreateTransformStream(ProcessorClass, methodName, processorArgs) {\n\t\tlet processor;\n\t\tconst transformStream = new TransformStream({\n\t\t\tstart: async () => {\n\t\t\t\tprocessor = new ProcessorClass(...processorArgs, this.format);\n\t\t\t\tawait processor.initialize();\n\t\t\t},\n\t\t\ttransform: async (chunk, controller) => {\n\t\t\t\tconst data = convertChunkToUint8Array(chunk);\n\t\t\t\tconst result = await processor[methodName](data, false);\n\t\t\t\tif (result.length > 0) {\n\t\t\t\t\tcontroller.enqueue(result);\n\t\t\t\t}\n\t\t\t},\n\t\t\tflush: async (controller) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst finalData = await processor.finish();\n\t\t\t\t\tif (finalData.length > 0) {\n\t\t\t\t\t\tcontroller.enqueue(finalData);\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tprocessor.cleanup();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tthis._readable = transformStream.readable;\n\t\tthis._writable = transformStream.writable;\n\t}\n\n\tget readable() {\n\t\treturn this._readable;\n\t}\n\tset readable(value) {\n\t\tthis._readable = value;\n\t}\n\tget writable() {\n\t\treturn this._writable;\n\t}\n\tset writable(value) {\n\t\tthis._writable = value;\n\t}\n}\n\nclass CompressionStream extends BaseStreamPolyfill {\n\tconstructor(format, options = {}) {\n\t\tconst level = options.level !== undefined ? options.level : 6;\n\t\tsuper(format, ZlibCompressor, \"compress\", [level]);\n\t}\n}\n\nclass DecompressionStream extends BaseStreamPolyfill {\n\tconstructor(format) {\n\t\tsuper(format, ZlibDecompressor, \"decompress\");\n\t}\n}\n\nexport { CompressionStream, DecompressionStream, initModule };\n\nfunction getWindowBits(format) {\n\tswitch (format) {\n\t\tcase \"deflate\":\n\t\t\treturn 15;\n\t\tcase \"deflate-raw\":\n\t\t\treturn -15;\n\t\tcase \"gzip\":\n\t\t\treturn 31;\n\t\tdefault:\n\t\t\tthrow new Error(`Unsupported format: ${format}`);\n\t}\n}\n\nfunction copyToWasmMemory(zlibModule, sourceData, targetPtr) {\n\tfor (let i = 0; i < sourceData.length; i++) {\n\t\tzlibModule.setValue(targetPtr + i, sourceData[i], \"i8\");\n\t}\n}\n\nfunction copyFromWasmMemory(zlibModule, sourcePtr, length) {\n\tconst output = new Uint8Array(length);\n\tfor (let i = 0; i < length; i++) {\n\t\toutput[i] = zlibModule.getValue(sourcePtr + i, \"i8\") & 0xFF;\n\t}\n\treturn output;\n}\n\nfunction initStream(zlibModule, streamPtr) {\n\tfor (let i = 0; i < 56; i++) {\n\t\tzlibModule.setValue(streamPtr + i, 0, \"i8\");\n\t}\n}\n\nfunction convertChunkToUint8Array(chunk) {\n\tif (chunk instanceof ArrayBuffer) {\n\t\treturn new Uint8Array(chunk);\n\t} else if (chunk instanceof Uint8Array) {\n\t\treturn chunk;\n\t} else if (ArrayBuffer.isView(chunk)) {\n\t\treturn new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n\t}\n}\n","export default \"\";","export default \"var ZlibModule=(()=>{var _scriptName=typeof document!=\\\"undefined\\\"?document.currentScript?.src:undefined;return async function(moduleArg={}){var moduleRtn;var c=moduleArg,aa=\\\"object\\\"==typeof window,n=\\\"undefined\\\"!=typeof WorkerGlobalScope;n&&(_scriptName=self.location.href);var q=\\\"\\\",r,t;\\nif(aa||n){try{q=(new URL(\\\".\\\",_scriptName)).href}catch{}n&&(t=a=>{var b=new XMLHttpRequest;b.open(\\\"GET\\\",a,!1);b.responseType=\\\"arraybuffer\\\";b.send(null);return new Uint8Array(b.response)});r=async a=>{if(w(a))return new Promise((d,e)=>{var g=new XMLHttpRequest;g.open(\\\"GET\\\",a,!0);g.responseType=\\\"arraybuffer\\\";g.onload=()=>{200==g.status||0==g.status&&g.response?d(g.response):e(g.status)};g.onerror=e;g.send(null)});var b=await fetch(a,{credentials:\\\"same-origin\\\"});if(b.ok)return b.arrayBuffer();throw Error(b.status+\\n\\\" : \\\"+b.url);}}var x=console.error.bind(console),y,z=!1,A,w=a=>a.startsWith(\\\"file://\\\"),B,ba,C,D,E,F,I,J,K,L,M,ca=!1;function da(){var a=C.buffer;D=new Int8Array(a);F=new Int16Array(a);E=new Uint8Array(a);new Uint16Array(a);I=new Int32Array(a);J=new Uint32Array(a);K=new Float32Array(a);L=new Float64Array(a);M=new BigInt64Array(a);new BigUint64Array(a)}var N=0,O=null;\\nfunction P(a){c.onAbort?.(a);a=\\\"Aborted(\\\"+a+\\\")\\\";x(a);z=!0;a=new WebAssembly.RuntimeError(a+\\\". Build with -sASSERTIONS for more info.\\\");ba?.(a);throw a;}var Q;async function ea(a){if(!y)try{var b=await r(a);return new Uint8Array(b)}catch{}if(a==Q&&y)a=new Uint8Array(y);else if(t)a=t(a);else throw\\\"both async and sync fetching of the wasm failed\\\";return a}\\nasync function fa(a,b){try{var d=await ea(a);return await WebAssembly.instantiate(d,b)}catch(e){x(`failed to asynchronously prepare wasm: ${e}`),P(e)}}async function ha(a){var b=Q;if(!y&&!w(b))try{var d=fetch(b,{credentials:\\\"same-origin\\\"});return await WebAssembly.instantiateStreaming(d,a)}catch(e){x(`wasm streaming compile failed: ${e}`),x(\\\"falling back to ArrayBuffer instantiation\\\")}return fa(b,a)}\\nclass ia{name=\\\"ExitStatus\\\";constructor(a){this.message=`Program terminated with exit(${a})`;this.status=a}}\\nvar ja=a=>{for(;0<a.length;)a.shift()(c)},ka=[],la=[],na=()=>{var a=c.preRun.shift();la.push(a)},R=!0,S=0,T={},oa=a=>{if(!(a instanceof ia||\\\"unwind\\\"==a))throw a;},pa=a=>{A=a;R||0<S||(c.onExit?.(a),z=!0);throw new ia(a);},qa=a=>{if(!z)try{if(a(),!(R||0<S))try{A=a=A,pa(a)}catch(b){oa(b)}}catch(b){oa(b)}},ra=new TextDecoder,sa=a=>{const b=a.length;return[b%128|128,b>>7,...a]},ta={i:127,p:127,j:126,f:125,d:124,e:111},ua=a=>sa(Array.from(a,b=>ta[b])),U,V,W=[];c.noExitRuntime&&(R=c.noExitRuntime);\\nc.printErr&&(x=c.printErr);c.wasmBinary&&(y=c.wasmBinary);\\nc.ccall=(a,b,d,e)=>{var g={string:h=>{var k=0;if(null!==h&&void 0!==h&&0!==h){for(var f=k=0;f<h.length;++f){var l=h.charCodeAt(f);127>=l?k++:2047>=l?k+=2:55296<=l&&57343>=l?(k+=4,++f):k+=3}var p=k+1;k=X(p);l=E;f=k>>>0;if(0<p){p=f+p-1;for(var G=0;G<h.length;++G){var m=h.codePointAt(G);if(127>=m){if(f>=p)break;l[f++>>>0]=m}else if(2047>=m){if(f+1>=p)break;l[f++>>>0]=192|m>>6;l[f++>>>0]=128|m&63}else if(65535>=m){if(f+2>=p)break;l[f++>>>0]=224|m>>12;l[f++>>>0]=128|m>>6&63;l[f++>>>0]=128|m&63}else{if(f+\\n3>=p)break;l[f++>>>0]=240|m>>18;l[f++>>>0]=128|m>>12&63;l[f++>>>0]=128|m>>6&63;l[f++>>>0]=128|m&63;G++}}l[f>>>0]=0}}return k},array:h=>{var k=X(h.length);D.set(h,k>>>0);return k}};a=c[\\\"_\\\"+a];var u=[],H=0;if(e)for(var v=0;v<e.length;v++){var ma=g[d[v]];ma?(0===H&&(H=va()),u[v]=ma(e[v])):u[v]=e[v]}d=a(...u);return d=function(h){0!==H&&wa(H);if(\\\"string\\\"===b)if(h>>>=0){for(var k=h,f=E,l=k+void 0;f[k]&&!(k>=l);)++k;h=ra.decode(E.subarray(h>>>0,k>>>0))}else h=\\\"\\\";else h=\\\"boolean\\\"===b?!!h:h;return h}(d)};\\nc.addFunction=(a,b)=>{if(!V){V=new WeakMap;var d=U.length;if(V)for(var e=0;e<0+d;e++){var g=U.get(e);g&&V.set(g,e)}}if(d=V.get(a)||0)return d;d=W.length?W.pop():U.grow(1);try{U.set(d,a)}catch(u){if(!(u instanceof TypeError))throw u;b=Uint8Array.of(0,97,115,109,1,0,0,0,1,...sa([1,96,...ua(b.slice(1)),...ua(\\\"v\\\"===b[0]?\\\"\\\":b[0])]),2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0);b=new WebAssembly.Module(b);b=(new WebAssembly.Instance(b,{e:{f:a}})).exports.f;U.set(d,b)}V.set(a,d);return d};\\nc.removeFunction=a=>{V.delete(U.get(a));U.set(a,null);W.push(a)};c.setValue=function(a,b,d=\\\"i8\\\"){d.endsWith(\\\"*\\\")&&(d=\\\"*\\\");switch(d){case \\\"i1\\\":D[a>>>0]=b;break;case \\\"i8\\\":D[a>>>0]=b;break;case \\\"i16\\\":F[a>>>1>>>0]=b;break;case \\\"i32\\\":I[a>>>2>>>0]=b;break;case \\\"i64\\\":M[a>>>3>>>0]=BigInt(b);break;case \\\"float\\\":K[a>>>2>>>0]=b;break;case \\\"double\\\":L[a>>>3>>>0]=b;break;case \\\"*\\\":J[a>>>2>>>0]=b;break;default:P(`invalid type for setValue: ${d}`)}};\\nc.getValue=function(a,b=\\\"i8\\\"){b.endsWith(\\\"*\\\")&&(b=\\\"*\\\");switch(b){case \\\"i1\\\":return D[a>>>0];case \\\"i8\\\":return D[a>>>0];case \\\"i16\\\":return F[a>>>1>>>0];case \\\"i32\\\":return I[a>>>2>>>0];case \\\"i64\\\":return M[a>>>3>>>0];case \\\"float\\\":return K[a>>>2>>>0];case \\\"double\\\":return L[a>>>3>>>0];case \\\"*\\\":return J[a>>>2>>>0];default:P(`invalid type for getValue: ${b}`)}};\\nvar xa,wa,X,va,ya={c:()=>P(\\\"\\\"),b:()=>{R=!1;S=0},d:(a,b)=>{T[a]&&(clearTimeout(T[a].id),delete T[a]);if(!b)return 0;var d=setTimeout(()=>{delete T[a];qa(()=>xa(a,performance.now()))},b);T[a]={id:d,A:b};return 0},e:function(a){a>>>=0;var b=E.length;if(4294901760<a)return!1;for(var d=1;4>=d;d*=2){var e=b*(1+.2/d);e=Math.min(e,a+100663296);a:{e=(Math.min(4294901760,65536*Math.ceil(Math.max(a,e)/65536))-C.buffer.byteLength+65535)/65536|0;try{C.grow(e);da();var g=1;break a}catch(u){}g=void 0}if(g)return!0}return!1},\\na:pa},Y=await (async function(){function a(d){Y=d.exports;Y=za();C=Y.f;da();U=Y.t;d=Y;c._deflate=d.h;c._deflateEnd=d.i;c._deflateInit2_=d.j;c._inflateInit2_=d.k;c._inflate=d.l;c._inflateEnd=d.m;c._malloc=d.n;c._free=d.o;c._inflateBack9Init_=d.p;c._inflateBack9=d.q;c._inflateBack9End=d.r;xa=d.s;wa=d.u;X=d.v;va=d.w;N--;c.monitorRunDependencies?.(N);0==N&&O&&(d=O,O=null,d());return Y}N++;c.monitorRunDependencies?.(N);var b={a:ya};if(c.instantiateWasm)return new Promise(d=>{c.instantiateWasm(b,\\n(e,g)=>{d(a(e,g))})});Q??=c.locateFile?c.locateFile(\\\"zlib-module.wasm\\\",q):q+\\\"zlib-module.wasm\\\";return a((await ha(b)).instance)}());function za(){var a=Y;a=Object.assign({},a);var b=d=>e=>d(e)>>>0;a.n=b(a.n);a.v=b(a.v);a.w=(d=>()=>d()>>>0)(a.w);return a}\\nfunction Z(){function a(){c.calledRun=!0;if(!z){ca=!0;Y.g();B?.(c);c.onRuntimeInitialized?.();if(c.postRun)for(\\\"function\\\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var b=c.postRun.shift();ka.push(b)}ja(ka)}}if(0<N)O=Z;else{if(c.preRun)for(\\\"function\\\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)na();ja(la);0<N?O=Z:c.setStatus?(c.setStatus(\\\"Running...\\\"),setTimeout(()=>{setTimeout(()=>c.setStatus(\\\"\\\"),1);a()},1)):a()}}\\nif(c.preInit)for(\\\"function\\\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.shift()();Z();ca?moduleRtn=c:moduleRtn=new Promise((a,b)=>{B=a;ba=b});\\n;return moduleRtn}})();if(typeof exports===\\\"object\\\"&&typeof module===\\\"object\\\"){module.exports=ZlibModule;module.exports.default=ZlibModule}else if(typeof define===\\\"function\\\"&&define[\\\"amd\\\"])define([],()=>ZlibModule);\\n\"","import { CompressionStream, DecompressionStream, initModule } from \"./mod.js\";\nimport wasmBase64 from \"../dist-wasm/zlib-module.wasm?embed\";\nimport moduleCode from \"../dist-wasm/zlib-module.js?raw\";\n\nconst wasmBinary = Uint8Array.from(atob(wasmBase64), (c) => c.charCodeAt(0));\nawait initModule(moduleCode, wasmBinary);\n\nexport { CompressionStream, DecompressionStream };\n"],"names":["moduleCode","wasmBinary","zlibModule"],"mappings":"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"}