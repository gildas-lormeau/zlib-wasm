{"version":3,"file":"zlib.js","sources":["../src/mod.js","../dist-wasm/zlib-module.wasm?embed","../dist-wasm/zlib-module.js?raw","../src/bundle.js"],"sourcesContent":["// deno-lint-ignore-file no-this-alias\n/**\n * CompressionStream & DecompressionStream Polyfill\n */\n\nconst Z_NO_FLUSH = 0;\nconst Z_PARTIAL_FLUSH = 1;\nconst Z_SYNC_FLUSH = 2;\nconst Z_FULL_FLUSH = 3;\nconst Z_FINISH = 4;\nconst Z_OK = 0;\nconst Z_STREAM_END = 1;\nconst Z_DEFAULT_COMPRESSION = -1;\nconst FLUSH_MODES = {\n\tnone: Z_NO_FLUSH,\n\tpartial: Z_PARTIAL_FLUSH,\n\tsync: Z_SYNC_FLUSH,\n\tfull: Z_FULL_FLUSH,\n\tfinish: Z_FINISH,\n\tauto: Z_NO_FLUSH,\n};\n\nlet zlibModule;\n\nasync function initModule(moduleCode, wasmBinary) {\n\tconst moduleFunction = new Function([], `${moduleCode};return ZlibModule`);\n\tconst ZlibModuleFactory = moduleFunction([]);\n\tzlibModule = await ZlibModuleFactory({ wasmBinary });\n\treturn zlibModule;\n}\n\nclass ZlibCompressor {\n\tconstructor(level = Z_DEFAULT_COMPRESSION, format = \"deflate\") {\n\t\tconst zlibCompressor = this;\n\t\tzlibCompressor.level = level;\n\t\tzlibCompressor.format = format;\n\t\tzlibCompressor.streamPtr = null;\n\t\tzlibCompressor.inputPtr = null;\n\t\tzlibCompressor.outputPtr = null;\n\t\tzlibCompressor.inputSize = 32768;\n\t\tzlibCompressor.outputSize = 32768;\n\t\tzlibCompressor.initialized = false;\n\t}\n\n\tinitialize() {\n\t\tconst zlibCompressor = this;\n\t\tif (zlibCompressor.initialized) return;\n\t\tzlibCompressor.streamPtr = zlibModule._malloc(56);\n\t\tzlibCompressor.inputPtr = zlibModule._malloc(zlibCompressor.inputSize);\n\t\tzlibCompressor.outputPtr = zlibModule._malloc(zlibCompressor.outputSize);\n\t\tinitStream(zlibModule, zlibCompressor.streamPtr);\n\t\tconst result = zlibModule.ccall(\"deflateInit2_\", \"number\", [\n\t\t\t\"number\",\n\t\t\t\"number\",\n\t\t\t\"number\",\n\t\t\t\"number\",\n\t\t\t\"number\",\n\t\t\t\"number\",\n\t\t\t\"string\",\n\t\t\t\"number\",\n\t\t], [zlibCompressor.streamPtr, zlibCompressor.level, 8, getWindowBits(zlibCompressor.format), 8, 0, \"1.3.1.1-motley\", 56]);\n\t\tif (result !== 0) {\n\t\t\tthrow new Error(`Compression initialization failed: ${result}`);\n\t\t}\n\t\tzlibCompressor.initialized = true;\n\t}\n\n\tasync compress(data, finish = false, flushMode = \"auto\") {\n\t\tconst zlibCompressor = this;\n\t\tif (!zlibCompressor.initialized) {\n\t\t\tawait zlibCompressor.initialize();\n\t\t}\n\t\tif (data.length === 0 && !finish) {\n\t\t\treturn new Uint8Array(0);\n\t\t}\n\t\tif (data.length > zlibCompressor.inputSize) {\n\t\t\tconst results = [];\n\t\t\tlet offset = 0;\n\t\t\twhile (offset < data.length) {\n\t\t\t\tconst chunkSize = Math.min(zlibCompressor.inputSize, data.length - offset);\n\t\t\t\tconst chunk = data.slice(offset, offset + chunkSize);\n\t\t\t\tconst isLastChunk = offset + chunkSize >= data.length;\n\t\t\t\tconst chunkResult = await zlibCompressor.compressSingleChunk(chunk, finish && isLastChunk, flushMode);\n\t\t\t\tif (chunkResult.length > 0) {\n\t\t\t\t\tresults.push(chunkResult);\n\t\t\t\t}\n\n\t\t\t\toffset += chunkSize;\n\t\t\t}\n\t\t\tconst totalLength = results.reduce((sum, chunk) => sum + chunk.length, 0);\n\t\t\tconst combined = new Uint8Array(totalLength);\n\t\t\tlet combinedOffset = 0;\n\t\t\tfor (const result of results) {\n\t\t\t\tcombined.set(result, combinedOffset);\n\t\t\t\tcombinedOffset += result.length;\n\t\t\t}\n\t\t\treturn combined;\n\t\t}\n\t\treturn zlibCompressor.compressSingleChunk(data, finish, flushMode);\n\t}\n\n\tcompressSingleChunk(data, finish = false, flushMode = \"auto\") {\n\t\tconst zlibCompressor = this;\n\t\tif (data.length > zlibCompressor.inputSize) {\n\t\t\tthrow new Error(`Chunk size ${data.length} exceeds buffer size ${zlibCompressor.inputSize}`);\n\t\t}\n\t\tcopyToWasmMemory(zlibModule, data, zlibCompressor.inputPtr);\n\t\tconst streamPtrU32 = zlibCompressor.streamPtr >>> 2;\n\t\tzlibModule.HEAPU32[streamPtrU32 + 0] = zlibCompressor.inputPtr;\n\t\tzlibModule.HEAPU32[streamPtrU32 + 1] = data.length;\n\t\tzlibModule.HEAPU32[streamPtrU32 + 3] = zlibCompressor.outputPtr;\n\t\tzlibModule.HEAPU32[streamPtrU32 + 4] = zlibCompressor.outputSize;\n\n\t\tconst flushType = finish ? Z_FINISH : (FLUSH_MODES[flushMode] || Z_NO_FLUSH);\n\t\tconst result = zlibModule._deflate(zlibCompressor.streamPtr, flushType);\n\t\tif (result < 0 || (finish && result !== Z_STREAM_END) || (!finish && result !== Z_OK)) {\n\t\t\tthrow new Error(`Compression failed: ${result}`);\n\t\t}\n\t\tconst availOut = zlibModule.HEAPU32[streamPtrU32 + 4];\n\t\tconst outputLength = zlibCompressor.outputSize - availOut;\n\t\treturn copyFromWasmMemory(zlibModule, zlibCompressor.outputPtr, outputLength);\n\t}\n\n\tasync finish() {\n\t\tconst zlibCompressor = this;\n\t\tconst finalData = await zlibCompressor.compress(new Uint8Array(0), true);\n\t\tzlibCompressor.cleanup();\n\t\treturn finalData;\n\t}\n\n\tcleanup() {\n\t\tconst zlibCompressor = this;\n\t\tif (zlibModule && zlibCompressor.streamPtr) {\n\t\t\tzlibModule._deflateEnd(zlibCompressor.streamPtr);\n\t\t\tzlibModule._free(zlibCompressor.streamPtr);\n\t\t\tzlibModule._free(zlibCompressor.inputPtr);\n\t\t\tzlibModule._free(zlibCompressor.outputPtr);\n\t\t\tzlibCompressor.streamPtr = null;\n\t\t\tzlibCompressor.inputPtr = null;\n\t\t\tzlibCompressor.outputPtr = null;\n\t\t}\n\t\tzlibCompressor.initialized = false;\n\t}\n}\n\nclass ZlibDecompressor {\n\tconstructor(format = \"deflate\") {\n\t\tconst zlibDecompressor = this;\n\t\tzlibDecompressor.format = format;\n\t\tzlibDecompressor.streamPtr = null;\n\t\tzlibDecompressor.inputPtr = null;\n\t\tzlibDecompressor.outputPtr = null;\n\t\tzlibDecompressor.windowPtr = null;\n\t\tzlibDecompressor.inputSize = 32768;\n\t\tzlibDecompressor.outputSize = 32768;\n\t\tzlibDecompressor.initialized = false;\n\t\tzlibDecompressor.isDeflate64 = format === \"deflate64\" || format === \"deflate64-raw\";\n\t}\n\n\tinitialize() {\n\t\tconst zlibDecompressor = this;\n\t\tif (zlibDecompressor.initialized) return;\n\t\tzlibDecompressor.streamPtr = zlibModule._malloc(56);\n\t\tzlibDecompressor.inputPtr = zlibModule._malloc(zlibDecompressor.inputSize);\n\t\tzlibDecompressor.outputPtr = zlibModule._malloc(zlibDecompressor.outputSize);\n\t\tinitStream(zlibModule, zlibDecompressor.streamPtr);\n\t\tlet result;\n\t\tif (zlibDecompressor.isDeflate64) {\n\t\t\tzlibDecompressor.windowPtr = zlibModule._malloc(65536);\n\t\t\tresult = zlibModule.ccall(\"inflateBack9Init_\", \"number\", [\"number\", \"number\", \"string\", \"number\"], [\n\t\t\t\tzlibDecompressor.streamPtr,\n\t\t\t\tzlibDecompressor.windowPtr,\n\t\t\t\t\"1.3.1.1-motley\",\n\t\t\t\t56,\n\t\t\t]);\n\t\t} else {\n\t\t\tresult = zlibModule.ccall(\"inflateInit2_\", \"number\", [\"number\", \"number\", \"string\", \"number\"], [\n\t\t\t\tzlibDecompressor.streamPtr,\n\t\t\t\tgetWindowBits(zlibDecompressor.format),\n\t\t\t\t\"1.3.1.1-motley\",\n\t\t\t\t56,\n\t\t\t]);\n\t\t}\n\t\tif (result !== 0) {\n\t\t\tthrow new Error(`Decompression initialization failed: ${result}`);\n\t\t}\n\t\tzlibDecompressor.initialized = true;\n\t}\n\n\tasync decompress(data, finish = false, flushMode = \"auto\") {\n\t\tconst zlibDecompressor = this;\n\t\tif (!zlibDecompressor.initialized) {\n\t\t\tawait zlibDecompressor.initialize();\n\t\t}\n\t\tif (data.length === 0 && !finish) {\n\t\t\treturn new Uint8Array(0);\n\t\t}\n\t\tif (zlibDecompressor.isDeflate64) {\n\t\t\treturn zlibDecompressor.decompressDeflate64(data, finish);\n\t\t}\n\t\tconst results = [];\n\t\tlet totalInputProcessed = 0;\n\t\twhile (totalInputProcessed < data.length || finish) {\n\t\t\tconst remainingInput = data.length - totalInputProcessed;\n\t\t\tconst inputChunkSize = Math.min(remainingInput, zlibDecompressor.inputSize);\n\t\t\tif (inputChunkSize > 0) {\n\t\t\t\tcopyToWasmMemory(\n\t\t\t\t\tzlibModule,\n\t\t\t\t\tdata.subarray(totalInputProcessed, totalInputProcessed + inputChunkSize),\n\t\t\t\t\tzlibDecompressor.inputPtr,\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst streamPtrU32 = zlibDecompressor.streamPtr >>> 2;\n\t\t\tzlibModule.HEAPU32[streamPtrU32 + 0] = zlibDecompressor.inputPtr;\n\t\t\tzlibModule.HEAPU32[streamPtrU32 + 1] = inputChunkSize;\n\t\t\tzlibModule.HEAPU32[streamPtrU32 + 3] = zlibDecompressor.outputPtr;\n\t\t\tzlibModule.HEAPU32[streamPtrU32 + 4] = zlibDecompressor.outputSize;\n\t\t\tconst isLastChunk = totalInputProcessed + inputChunkSize >= data.length;\n\t\t\tconst flushType = (finish && isLastChunk) ? Z_FINISH : (FLUSH_MODES[flushMode] || Z_SYNC_FLUSH);\n\t\t\tconst result = zlibModule._inflate(zlibDecompressor.streamPtr, flushType);\n\t\t\tif (result < 0 && result !== -5) {\n\t\t\t\tthrow new Error(`Decompression failed: ${result}`);\n\t\t\t}\n\t\t\tconst availOut = zlibModule.HEAPU32[streamPtrU32 + 4];\n\t\t\tconst outputLength = zlibDecompressor.outputSize - availOut;\n\t\t\tif (outputLength > 0) {\n\t\t\t\tresults.push(copyFromWasmMemory(zlibModule, zlibDecompressor.outputPtr, outputLength));\n\t\t\t}\n\t\t\tconst inputProcessed = zlibModule.HEAPU32[streamPtrU32 + 1];\n\t\t\ttotalInputProcessed += inputChunkSize - inputProcessed;\n\t\t\tif (result === Z_STREAM_END) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (finish && isLastChunk && result !== Z_STREAM_END) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (totalInputProcessed < data.length) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tconst totalLength = results.reduce((sum, chunk) => sum + chunk.length, 0);\n\t\tconst output = new Uint8Array(totalLength);\n\t\tlet offset = 0;\n\t\tfor (const chunk of results) {\n\t\t\toutput.set(chunk, offset);\n\t\t\toffset += chunk.length;\n\t\t}\n\t\treturn output;\n\t}\n\n\tdecompressDeflate64(data, finish) {\n\t\tconst zlibDecompressor = this;\n\t\tcopyToWasmMemory(zlibModule, data, zlibDecompressor.inputPtr);\n\t\tconst streamPtrU32 = zlibDecompressor.streamPtr >>> 2;\n\t\tzlibModule.HEAPU32[streamPtrU32 + 0] = zlibDecompressor.inputPtr;\n\t\tzlibModule.HEAPU32[streamPtrU32 + 1] = data.length;\n\t\tzlibModule.HEAPU32[streamPtrU32 + 2] = zlibDecompressor.outputPtr;\n\t\tzlibModule.HEAPU32[streamPtrU32 + 3] = zlibDecompressor.outputSize;\n\t\tif (!zlibDecompressor.inflateBack9InFunc) {\n\t\t\tzlibDecompressor.inflateBack9InFunc = zlibModule.addFunction((_, buf) => {\n\t\t\t\tconst availIn = zlibModule.HEAPU32[streamPtrU32 + 1];\n\t\t\t\tif (availIn > 0) {\n\t\t\t\t\tconst nextIn = zlibModule.HEAPU32[streamPtrU32 + 0];\n\t\t\t\t\tzlibModule.HEAPU32[buf >>> 2] = nextIn;\n\t\t\t\t\treturn availIn;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}, \"iii\");\n\t\t\tzlibDecompressor.inflateBack9OutFunc = zlibModule.addFunction((_, buf, len) => {\n\t\t\t\tconst nextOut = zlibModule.HEAPU32[streamPtrU32 + 2];\n\t\t\t\tconst availOut = zlibModule.HEAPU32[streamPtrU32 + 3];\n\t\t\t\tconst copyLen = Math.min(len, availOut);\n\t\t\t\tfor (let i = 0; i < copyLen; i++) {\n\t\t\t\t\tzlibModule.HEAPU8[nextOut + i] = zlibModule.HEAPU8[buf + i];\n\t\t\t\t}\n\t\t\t\tzlibModule.HEAPU32[streamPtrU32 + 2] = nextOut + copyLen;\n\t\t\t\tzlibModule.HEAPU32[streamPtrU32 + 3] = availOut - copyLen;\n\t\t\t\treturn 0;\n\t\t\t}, \"iiii\");\n\t\t}\n\t\tconst result = zlibModule.ccall(\"inflateBack9\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\"], [\n\t\t\tzlibDecompressor.streamPtr,\n\t\t\tzlibDecompressor.inflateBack9InFunc,\n\t\t\t0,\n\t\t\tzlibDecompressor.inflateBack9OutFunc,\n\t\t\t0,\n\t\t]);\n\t\tif (finish ? result !== 1 : (result !== 0 && result !== 1)) {\n\t\t\tconst msg = finish ? \"expected end of stream but got error code\" : \"failed with error code\";\n\t\t\tthrow new Error(`Deflate64 decompression ${finish ? \"incomplete: \" + msg : msg}: ${result}`);\n\t\t}\n\t\tconst outputLength = zlibModule.HEAPU32[streamPtrU32 + 2] - zlibDecompressor.outputPtr;\n\t\treturn copyFromWasmMemory(zlibModule, zlibDecompressor.outputPtr, outputLength);\n\t}\n\n\tasync finish() {\n\t\tconst zlibDecompressor = this;\n\t\tconst finalData = await zlibDecompressor.decompress(new Uint8Array(0), true);\n\t\tzlibDecompressor.cleanup();\n\t\treturn finalData;\n\t}\n\n\tcleanup() {\n\t\tconst zlibDecompressor = this;\n\t\tif (zlibModule && zlibDecompressor.streamPtr) {\n\t\t\tif (zlibDecompressor.isDeflate64) {\n\t\t\t\tzlibModule._inflateBack9End(zlibDecompressor.streamPtr);\n\t\t\t\tif (zlibDecompressor.windowPtr) {\n\t\t\t\t\tzlibModule._free(zlibDecompressor.windowPtr);\n\t\t\t\t\tzlibDecompressor.windowPtr = null;\n\t\t\t\t}\n\t\t\t\tif (zlibDecompressor.inflateBack9InFunc) {\n\t\t\t\t\tzlibModule.removeFunction(zlibDecompressor.inflateBack9InFunc);\n\t\t\t\t\tzlibDecompressor.inflateBack9InFunc = null;\n\t\t\t\t}\n\t\t\t\tif (zlibDecompressor.inflateBack9OutFunc) {\n\t\t\t\t\tzlibModule.removeFunction(zlibDecompressor.inflateBack9OutFunc);\n\t\t\t\t\tzlibDecompressor.inflateBack9OutFunc = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tzlibModule._inflateEnd(zlibDecompressor.streamPtr);\n\t\t\t}\n\t\t\tzlibModule._free(zlibDecompressor.streamPtr);\n\t\t\tzlibModule._free(zlibDecompressor.inputPtr);\n\t\t\tzlibModule._free(zlibDecompressor.outputPtr);\n\t\t\tzlibDecompressor.streamPtr = null;\n\t\t\tzlibDecompressor.inputPtr = null;\n\t\t\tzlibDecompressor.outputPtr = null;\n\t\t}\n\t\tzlibDecompressor.initialized = false;\n\t}\n}\n\nclass BaseStreamPolyfill {\n\tconstructor(format, processorClass, methodName, processorArgs = []) {\n\t\tconst baseProcessor = this;\n\t\tbaseProcessor.format = format;\n\t\tbaseProcessor.createTransformStream(processorClass, methodName, processorArgs);\n\t}\n\n\tcreateTransformStream(ProcessorClass, methodName, processorArgs) {\n\t\tconst baseProcessor = this;\n\t\tlet processor;\n\t\tconst transformStream = new TransformStream({\n\t\t\tstart: async () => {\n\t\t\t\tprocessor = new ProcessorClass(...processorArgs, baseProcessor.format);\n\t\t\t\tawait processor.initialize();\n\t\t\t},\n\t\t\ttransform: async (chunk, controller) => {\n\t\t\t\tconst data = convertChunkToUint8Array(chunk);\n\t\t\t\tconst result = await processor[methodName](data, false);\n\t\t\t\tif (result.length > 0) {\n\t\t\t\t\tcontroller.enqueue(result);\n\t\t\t\t}\n\t\t\t},\n\t\t\tflush: async (controller) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst finalData = await processor.finish();\n\t\t\t\t\tif (finalData.length > 0) {\n\t\t\t\t\t\tcontroller.enqueue(finalData);\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tprocessor.cleanup();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tbaseProcessor._readable = transformStream.readable;\n\t\tbaseProcessor._writable = transformStream.writable;\n\t}\n\n\tget readable() {\n\t\treturn this._readable;\n\t}\n\tset readable(value) {\n\t\tthis._readable = value;\n\t}\n\tget writable() {\n\t\treturn this._writable;\n\t}\n\tset writable(value) {\n\t\tthis._writable = value;\n\t}\n}\n\nclass CompressionStream extends BaseStreamPolyfill {\n\tconstructor(format, options = {}) {\n\t\tconst level = options.level !== undefined ? options.level : 6;\n\t\tsuper(format, ZlibCompressor, \"compress\", [level]);\n\t}\n}\n\nclass DecompressionStream extends BaseStreamPolyfill {\n\tconstructor(format) {\n\t\tsuper(format, ZlibDecompressor, \"decompress\");\n\t}\n}\n\nexport { CompressionStream, DecompressionStream, initModule };\n\nfunction getWindowBits(format) {\n\tswitch (format) {\n\t\tcase \"deflate\":\n\t\t\treturn 15;\n\t\tcase \"deflate-raw\":\n\t\t\treturn -15;\n\t\tcase \"gzip\":\n\t\t\treturn 31;\n\t\tdefault:\n\t\t\tthrow new Error(`Unsupported format: ${format}`);\n\t}\n}\n\nfunction copyToWasmMemory(zlibModule, sourceData, targetPtr) {\n\tzlibModule.HEAPU8.set(sourceData, targetPtr);\n}\n\nfunction copyFromWasmMemory(zlibModule, sourcePtr, length) {\n\treturn zlibModule.HEAPU8.slice(sourcePtr, sourcePtr + length);\n}\n\nfunction initStream(zlibModule, streamPtr) {\n\tzlibModule.HEAPU8.fill(0, streamPtr, streamPtr + 56);\n}\n\nfunction convertChunkToUint8Array(chunk) {\n\tif (chunk instanceof ArrayBuffer) {\n\t\treturn new Uint8Array(chunk);\n\t} else if (chunk instanceof Uint8Array) {\n\t\treturn chunk;\n\t} else if (ArrayBuffer.isView(chunk)) {\n\t\treturn new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n\t}\n}\n","export default \"\";","export default \"var ZlibModule=(()=>{var _scriptName=typeof document!=\\\"undefined\\\"?document.currentScript?.src:undefined;return async function(moduleArg={}){var moduleRtn;var b=moduleArg,aa=\\\"object\\\"==typeof window,n=\\\"undefined\\\"!=typeof WorkerGlobalScope;n&&(_scriptName=self.location.href);var q=\\\"\\\",r,v;\\nif(aa||n){try{q=(new URL(\\\".\\\",_scriptName)).href}catch{}n&&(v=a=>{var d=new XMLHttpRequest;d.open(\\\"GET\\\",a,!1);d.responseType=\\\"arraybuffer\\\";d.send(null);return new Uint8Array(d.response)});r=async a=>{if(w(a))return new Promise((c,g)=>{var k=new XMLHttpRequest;k.open(\\\"GET\\\",a,!0);k.responseType=\\\"arraybuffer\\\";k.onload=()=>{200==k.status||0==k.status&&k.response?c(k.response):g(k.status)};k.onerror=g;k.send(null)});var d=await fetch(a,{credentials:\\\"same-origin\\\"});if(d.ok)return d.arrayBuffer();throw Error(d.status+\\n\\\" : \\\"+d.url);}}var x=console.error.bind(console),y,z=!1,A,w=a=>a.startsWith(\\\"file://\\\"),B,C,F,G,H,I=!1,J=0,K=null;function L(a){b.onAbort?.(a);a=\\\"Aborted(\\\"+a+\\\")\\\";x(a);z=!0;a=new WebAssembly.RuntimeError(a+\\\". Build with -sASSERTIONS for more info.\\\");C?.(a);throw a;}var M;async function ba(a){if(!y)try{var d=await r(a);return new Uint8Array(d)}catch{}if(a==M&&y)a=new Uint8Array(y);else if(v)a=v(a);else throw\\\"both async and sync fetching of the wasm failed\\\";return a}\\nasync function ca(a,d){try{var c=await ba(a);return await WebAssembly.instantiate(c,d)}catch(g){x(`failed to asynchronously prepare wasm: ${g}`),L(g)}}async function da(a){var d=M;if(!y&&!w(d))try{var c=fetch(d,{credentials:\\\"same-origin\\\"});return await WebAssembly.instantiateStreaming(c,a)}catch(g){x(`wasm streaming compile failed: ${g}`),x(\\\"falling back to ArrayBuffer instantiation\\\")}return ca(d,a)}\\nclass N{name=\\\"ExitStatus\\\";constructor(a){this.message=`Program terminated with exit(${a})`;this.status=a}}\\nvar O=a=>{for(;0<a.length;)a.shift()(b)},P=[],Q=[],fa=()=>{var a=b.preRun.shift();Q.push(a)},R=!0,S=0,T={},ha=a=>{if(!(a instanceof N||\\\"unwind\\\"==a))throw a;},ia=a=>{A=a;R||0<S||(b.onExit?.(a),z=!0);throw new N(a);},ja=a=>{if(!z)try{if(a(),!(R||0<S))try{A=a=A,ia(a)}catch(d){ha(d)}}catch(d){ha(d)}},ka=new TextDecoder,la=a=>{const d=a.length;return[d%128|128,d>>7,...a]},ma={i:127,p:127,j:126,f:125,d:124,e:111},na=a=>la(Array.from(a,d=>ma[d])),U,V,W=[];b.noExitRuntime&&(R=b.noExitRuntime);\\nb.printErr&&(x=b.printErr);b.wasmBinary&&(y=b.wasmBinary);\\nb.ccall=(a,d,c,g)=>{var k={string:f=>{var l=0;if(null!==f&&void 0!==f&&0!==f){for(var e=l=0;e<f.length;++e){var h=f.charCodeAt(e);127>=h?l++:2047>=h?l+=2:55296<=h&&57343>=h?(l+=4,++e):l+=3}var p=l+1;e=l=X(p);h=H;if(0<p){p=e+p-1;for(var D=0;D<f.length;++D){var m=f.codePointAt(D);if(127>=m){if(e>=p)break;h[e++]=m}else if(2047>=m){if(e+1>=p)break;h[e++]=192|m>>6;h[e++]=128|m&63}else if(65535>=m){if(e+2>=p)break;h[e++]=224|m>>12;h[e++]=128|m>>6&63;h[e++]=128|m&63}else{if(e+3>=p)break;h[e++]=240|m>>18;\\nh[e++]=128|m>>12&63;h[e++]=128|m>>6&63;h[e++]=128|m&63;D++}}h[e]=0}}return l},array:f=>{var l=X(f.length);G.set(f,l);return l}};a=b[\\\"_\\\"+a];var u=[],E=0;if(g)for(var t=0;t<g.length;t++){var ea=k[c[t]];ea?(0===E&&(E=oa()),u[t]=ea(g[t])):u[t]=g[t]}c=a(...u);return c=function(f){0!==E&&pa(E);if(\\\"string\\\"===d)if(f){for(var l=f,e=H,h=l+void 0;e[l]&&!(l>=h);)++l;f=ka.decode(H.subarray(f,l))}else f=\\\"\\\";else f=\\\"boolean\\\"===d?!!f:f;return f}(c)};\\nb.addFunction=(a,d)=>{if(!V){V=new WeakMap;var c=U.length;if(V)for(var g=0;g<0+c;g++){var k=U.get(g);k&&V.set(k,g)}}if(c=V.get(a)||0)return c;c=W.length?W.pop():U.grow(1);try{U.set(c,a)}catch(u){if(!(u instanceof TypeError))throw u;d=Uint8Array.of(0,97,115,109,1,0,0,0,1,...la([1,96,...na(d.slice(1)),...na(\\\"v\\\"===d[0]?\\\"\\\":d[0])]),2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0);d=new WebAssembly.Module(d);d=(new WebAssembly.Instance(d,{e:{f:a}})).exports.f;U.set(c,d)}V.set(a,c);return c};\\nb.removeFunction=a=>{V.delete(U.get(a));U.set(a,null);W.push(a)};\\nvar qa,pa,X,oa,ra={c:()=>L(\\\"\\\"),b:()=>{R=!1;S=0},d:(a,d)=>{T[a]&&(clearTimeout(T[a].id),delete T[a]);if(!d)return 0;var c=setTimeout(()=>{delete T[a];ja(()=>qa(a,performance.now()))},d);T[a]={id:c,A:d};return 0},e:()=>{L(\\\"OOM\\\")},a:ia},Y=await (async function(){function a(c){Y=c.exports;F=Y.f;c=F.buffer;b.HEAP8=G=new Int8Array(c);new Int16Array(c);b.HEAPU8=H=new Uint8Array(c);new Uint16Array(c);b.HEAP32=new Int32Array(c);b.HEAPU32=new Uint32Array(c);new Float32Array(c);new Float64Array(c);\\nnew BigInt64Array(c);new BigUint64Array(c);U=Y.s;c=Y;b._deflate=c.g;b._deflateEnd=c.h;b._deflateInit2_=c.i;b._inflateInit2_=c.j;b._inflate=c.k;b._inflateEnd=c.l;b._malloc=c.m;b._free=c.n;b._inflateBack9Init_=c.o;b._inflateBack9=c.p;b._inflateBack9End=c.q;qa=c.r;pa=c.t;X=c.u;oa=c.v;J--;b.monitorRunDependencies?.(J);0==J&&K&&(c=K,K=null,c());return Y}J++;b.monitorRunDependencies?.(J);var d={a:ra};if(b.instantiateWasm)return new Promise(c=>{b.instantiateWasm(d,(g,k)=>{c(a(g,k))})});M??=b.locateFile?\\nb.locateFile(\\\"zlib-module.wasm\\\",q):q+\\\"zlib-module.wasm\\\";return a((await da(d)).instance)}());\\nfunction Z(){function a(){b.calledRun=!0;if(!z){I=!0;B?.(b);b.onRuntimeInitialized?.();if(b.postRun)for(\\\"function\\\"==typeof b.postRun&&(b.postRun=[b.postRun]);b.postRun.length;){var d=b.postRun.shift();P.push(d)}O(P)}}if(0<J)K=Z;else{if(b.preRun)for(\\\"function\\\"==typeof b.preRun&&(b.preRun=[b.preRun]);b.preRun.length;)fa();O(Q);0<J?K=Z:b.setStatus?(b.setStatus(\\\"Running...\\\"),setTimeout(()=>{setTimeout(()=>b.setStatus(\\\"\\\"),1);a()},1)):a()}}\\nif(b.preInit)for(\\\"function\\\"==typeof b.preInit&&(b.preInit=[b.preInit]);0<b.preInit.length;)b.preInit.shift()();Z();I?moduleRtn=b:moduleRtn=new Promise((a,d)=>{B=a;C=d});\\n;return moduleRtn}})();if(typeof exports===\\\"object\\\"&&typeof module===\\\"object\\\"){module.exports=ZlibModule;module.exports.default=ZlibModule}else if(typeof define===\\\"function\\\"&&define[\\\"amd\\\"])define([],()=>ZlibModule);\\n\"","import { CompressionStream, DecompressionStream, initModule } from \"./mod.js\";\nimport wasmBase64 from \"../dist-wasm/zlib-module.wasm?embed\";\nimport moduleCode from \"../dist-wasm/zlib-module.js?raw\";\n\nconst wasmBinary = Uint8Array.from(atob(wasmBase64), (c) => c.charCodeAt(0));\nawait initModule(moduleCode, wasmBinary);\n\nexport { CompressionStream, DecompressionStream };\n"],"names":["moduleCode","wasmBinary","zlibModule"],"mappings":"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"}