{"version":3,"file":"zlib.js","sources":["../src/mod.js","../dist-wasm/zlib-module.wasm?embed","../dist-wasm/zlib-module.js?raw","../src/bundle.js"],"sourcesContent":["// deno-lint-ignore-file no-this-alias\n/**\n * CompressionStream & DecompressionStream Polyfill\n */\n\n// zlib constants\nconst Z_NO_FLUSH = 0;\nconst Z_PARTIAL_FLUSH = 1;\nconst Z_SYNC_FLUSH = 2;\nconst Z_FULL_FLUSH = 3;\nconst Z_FINISH = 4;\nconst Z_OK = 0;\nconst Z_STREAM_END = 1;\nconst Z_DEFAULT_COMPRESSION = -1;\nconst Z_BUF_ERROR = -5;\n\n// Buffer sizes\nconst DEFAULT_INPUT_SIZE = 32768;\nconst DEFAULT_OUTPUT_SIZE = 32768;\nconst STREAM_STRUCT_SIZE = 56;\nconst DEFLATE64_WINDOW_SIZE = 65536;\n\n// Format strings\nconst FORMAT_DEFLATE = \"deflate\";\nconst FORMAT_DEFLATE_RAW = \"deflate-raw\";\nconst FORMAT_GZIP = \"gzip\";\nconst FORMAT_DEFLATE64 = \"deflate64\";\nconst FORMAT_DEFLATE64_RAW = \"deflate64-raw\";\n\n// Window bits for different formats\nconst DEFLATE_WINDOW_BITS = 15;\nconst DEFLATE_RAW_WINDOW_BITS = -15;\nconst GZIP_WINDOW_BITS = 31;\n\n// Method constants\nconst DEFLATE_METHOD = 8;\nconst DEFLATE_MEM_LEVEL = 8;\nconst DEFLATE_STRATEGY = 0;\n\n// Function signatures for emscripten\nconst SIGNATURE_III = \"iii\";\nconst SIGNATURE_IIII = \"iiii\";\n\n// zlib version string\nconst ZLIB_VERSION = \"1.3.1.1-motley\";\n\n// Function names\nconst FUNC_DEFLATE_INIT2 = \"deflateInit2_\";\nconst FUNC_INFLATE_INIT2 = \"inflateInit2_\";\nconst FUNC_INFLATE_BACK9_INIT = \"inflateBack9Init_\";\nconst FUNC_INFLATE_BACK9 = \"inflateBack9\";\nconst FUNC_DEFLATE = \"_deflate\";\nconst FUNC_INFLATE = \"_inflate\";\nconst FUNC_DEFLATE_END = \"_deflateEnd\";\nconst FUNC_INFLATE_END = \"_inflateEnd\";\nconst FUNC_INFLATE_BACK9_END = \"_inflateBack9End\";\nconst FUNC_MALLOC = \"_malloc\";\nconst FUNC_FREE = \"_free\";\nconst FUNC_CRC32 = \"_crc32\";\n\n// Method names\nconst METHOD_COMPRESS = \"compress\";\nconst METHOD_DECOMPRESS = \"decompress\";\n\n// Type names\nconst TYPE_NUMBER = \"number\";\nconst TYPE_STRING = \"string\";\n\n// Other constants\nconst FLUSH_MODE_AUTO = \"auto\";\nconst ERROR_UNKNOWN = \"unknown error\";\nconst HEX_PAD_LENGTH = 8;\nconst HEX_PAD_CHAR = '0';\nconst DEFAULT_COMPRESSOR_LEVEL = 6;\n\n// Error descriptions\nconst ERROR_DESCRIPTIONS = {\n\t'-1': 'system error',\n\t'-2': 'stream error',\n\t'-3': 'data error (corrupted/invalid data)',\n\t'-4': 'memory error',\n\t'-5': 'buffer error',\n\t'-6': 'version error'\n};\n\n// Error messages\nconst MSG_COMPRESSION_INIT_FAILED = \"Compression initialization failed\";\nconst MSG_DECOMPRESSION_INIT_FAILED = \"Decompression initialization failed\";\nconst MSG_COMPRESSION_FAILED = \"Compression failed\";\nconst MSG_DECOMPRESSION_FAILED = \"Decompression failed\";\nconst MSG_DEFLATE64_DECOMPRESSION_FAILED = \"Deflate64 decompression failed with error code\";\nconst MSG_DEFLATE64_DECOMPRESSION_INCOMPLETE = \"Deflate64 decompression incomplete: expected end of stream but got error code\";\nconst MSG_CRC32_MISMATCH = \"CRC32 mismatch: expected\";\nconst MSG_CHUNK_SIZE_EXCEEDED = \"Chunk size\";\nconst MSG_EXCEEDS_BUFFER_SIZE = \"exceeds buffer size\";\nconst MSG_UNSUPPORTED_FORMAT = \"Unsupported format\";\n\nconst FLUSH_MODES = {\n\tnone: Z_NO_FLUSH,\n\tpartial: Z_PARTIAL_FLUSH,\n\tsync: Z_SYNC_FLUSH,\n\tfull: Z_FULL_FLUSH,\n\tfinish: Z_FINISH,\n\tauto: Z_NO_FLUSH,\n};\n\nlet zlibModule;\n\nasync function initModule(moduleCode, wasmBinary) {\n\tconst moduleFunction = new Function([], `${moduleCode};return ZlibModule`);\n\tconst ZlibModuleFactory = moduleFunction([]);\n\tzlibModule = await ZlibModuleFactory({ wasmBinary });\n\treturn zlibModule;\n}\n\nclass ZlibCompressor {\n\tconstructor(level = Z_DEFAULT_COMPRESSION, format = FORMAT_DEFLATE, computeCRC32 = false) {\n\t\tconst zlibCompressor = this;\n\t\tzlibCompressor.level = level;\n\t\tzlibCompressor.format = format;\n\t\tzlibCompressor.streamPtr = null;\n\t\tzlibCompressor.inputPtr = null;\n\t\tzlibCompressor.outputPtr = null;\n\t\tzlibCompressor.inputSize = DEFAULT_INPUT_SIZE;\n\t\tzlibCompressor.outputSize = DEFAULT_OUTPUT_SIZE;\n\t\tconst isRawFormat = format === FORMAT_DEFLATE_RAW;\n\t\tzlibCompressor.computeCRC32 = isRawFormat && computeCRC32;\n\t\tzlibCompressor.crc32 = 0;\n\t}\n\n\tinitialize() {\n\t\tconst zlibCompressor = this;\n\t\tzlibCompressor.streamPtr = zlibModule[FUNC_MALLOC](STREAM_STRUCT_SIZE);\n\t\tzlibCompressor.inputPtr = zlibModule[FUNC_MALLOC](zlibCompressor.inputSize);\n\t\tzlibCompressor.outputPtr = zlibModule[FUNC_MALLOC](zlibCompressor.outputSize);\n\t\tinitStream(zlibModule, zlibCompressor.streamPtr);\n\t\tconst result = zlibModule.ccall(FUNC_DEFLATE_INIT2, TYPE_NUMBER, [\n\t\t\tTYPE_NUMBER,\n\t\t\tTYPE_NUMBER,\n\t\t\tTYPE_NUMBER,\n\t\t\tTYPE_NUMBER,\n\t\t\tTYPE_NUMBER,\n\t\t\tTYPE_NUMBER,\n\t\t\tTYPE_STRING,\n\t\t\tTYPE_NUMBER,\n\t\t], [zlibCompressor.streamPtr, zlibCompressor.level, DEFLATE_METHOD, getWindowBits(zlibCompressor.format), DEFLATE_MEM_LEVEL, DEFLATE_STRATEGY, ZLIB_VERSION, STREAM_STRUCT_SIZE]);\n\t\tif (result !== 0) {\n\t\t\tthrow new Error(`${MSG_COMPRESSION_INIT_FAILED}: ${result}`);\n\t\t}\n\t}\n\n\tcompress(data, finish = false, flushMode = FLUSH_MODE_AUTO) {\n\t\tconst zlibCompressor = this;\n\t\tif (data.length === 0 && !finish) {\n\t\t\treturn new Uint8Array(0);\n\t\t}\n\t\tif (data.length > zlibCompressor.inputSize) {\n\t\t\tconst results = [];\n\t\t\tlet offset = 0;\n\t\t\twhile (offset < data.length) {\n\t\t\t\tconst chunkSize = Math.min(zlibCompressor.inputSize, data.length - offset);\n\t\t\t\tconst chunk = data.slice(offset, offset + chunkSize);\n\t\t\t\tconst isLastChunk = offset + chunkSize >= data.length;\n\t\t\t\tconst chunkResult = zlibCompressor.compressSingleChunk(chunk, finish && isLastChunk, flushMode);\n\t\t\t\tif (chunkResult.length > 0) {\n\t\t\t\t\tresults.push(chunkResult);\n\t\t\t\t}\n\t\t\t\toffset += chunkSize;\n\t\t\t}\n\t\t\tconst totalLength = results.reduce((sum, chunk) => sum + chunk.length, 0);\n\t\t\tconst combined = new Uint8Array(totalLength);\n\t\t\tlet combinedOffset = 0;\n\t\t\tfor (const result of results) {\n\t\t\t\tcombined.set(result, combinedOffset);\n\t\t\t\tcombinedOffset += result.length;\n\t\t\t}\n\t\t\treturn combined;\n\t\t}\n\t\treturn zlibCompressor.compressSingleChunk(data, finish, flushMode);\n\t}\n\n\tcompressSingleChunk(data, finish = false, flushMode = FLUSH_MODE_AUTO) {\n\t\tconst zlibCompressor = this;\n\t\tif (data.length > zlibCompressor.inputSize) {\n\t\t\tthrow new Error(`${MSG_CHUNK_SIZE_EXCEEDED} ${data.length} ${MSG_EXCEEDS_BUFFER_SIZE} ${zlibCompressor.inputSize}`);\n\t\t}\n\t\tif (zlibCompressor.level === 0 && zlibCompressor.format === FORMAT_DEFLATE_RAW) {\n\t\t\tif (zlibCompressor.computeCRC32 && data.length > 0) {\n\t\t\t\tconst tempPtr = zlibModule[FUNC_MALLOC](data.length);\n\t\t\t\ttry {\n\t\t\t\t\tzlibModule.HEAPU8.set(data, tempPtr);\n\t\t\t\t\tzlibCompressor.crc32 = zlibModule[FUNC_CRC32](zlibCompressor.crc32, tempPtr, data.length);\n\t\t\t\t} finally {\n\t\t\t\t\tzlibModule[FUNC_FREE](tempPtr);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn data;\n\t\t}\n\n\t\tcopyToWasmMemory(zlibModule, data, zlibCompressor.inputPtr);\n\t\tif (zlibCompressor.computeCRC32 && data.length > 0) {\n\t\t\tzlibCompressor.crc32 = zlibModule[FUNC_CRC32](zlibCompressor.crc32, zlibCompressor.inputPtr, data.length);\n\t\t}\n\t\tconst streamPtrU32 = zlibCompressor.streamPtr >>> 2;\n\t\tzlibModule.HEAPU32[streamPtrU32 + 0] = zlibCompressor.inputPtr;\n\t\tzlibModule.HEAPU32[streamPtrU32 + 1] = data.length;\n\t\tzlibModule.HEAPU32[streamPtrU32 + 3] = zlibCompressor.outputPtr;\n\t\tzlibModule.HEAPU32[streamPtrU32 + 4] = zlibCompressor.outputSize;\n\t\tconst flushType = finish ? Z_FINISH : (FLUSH_MODES[flushMode] || Z_NO_FLUSH);\n\t\tconst result = zlibModule[FUNC_DEFLATE](zlibCompressor.streamPtr, flushType);\n\t\tif (result < 0 || (finish && result !== Z_STREAM_END) || (!finish && result !== Z_OK)) {\n\t\t\tthrow new Error(`${MSG_COMPRESSION_FAILED}: ${result}`);\n\t\t}\n\t\tconst availOut = zlibModule.HEAPU32[streamPtrU32 + 4];\n\t\tconst outputLength = zlibCompressor.outputSize - availOut;\n\t\treturn copyFromWasmMemory(zlibModule, zlibCompressor.outputPtr, outputLength);\n\t}\n\n\tasync finish() {\n\t\tconst zlibCompressor = this;\n\t\tconst finalData = await zlibCompressor.compress(new Uint8Array(0), true);\n\t\tzlibCompressor.cleanup();\n\t\treturn finalData;\n\t}\n\n\tcleanup() {\n\t\tconst zlibCompressor = this;\n\t\tif (zlibModule && zlibCompressor.streamPtr) {\n\t\t\tzlibModule[FUNC_DEFLATE_END](zlibCompressor.streamPtr);\n\t\t\tzlibModule[FUNC_FREE](zlibCompressor.streamPtr);\n\t\t\tzlibModule[FUNC_FREE](zlibCompressor.inputPtr);\n\t\t\tzlibModule[FUNC_FREE](zlibCompressor.outputPtr);\n\t\t\tzlibCompressor.streamPtr = null;\n\t\t\tzlibCompressor.inputPtr = null;\n\t\t\tzlibCompressor.outputPtr = null;\n\t\t}\n\t}\n}\n\nclass ZlibDecompressor {\n\tconstructor(format = FORMAT_DEFLATE, computeCRC32 = false, expectedCRC32) {\n\t\tconst zlibDecompressor = this;\n\t\tzlibDecompressor.format = format;\n\t\tzlibDecompressor.streamPtr = null;\n\t\tzlibDecompressor.inputPtr = null;\n\t\tzlibDecompressor.outputPtr = null;\n\t\tzlibDecompressor.windowPtr = null;\n\t\tzlibDecompressor.inputSize = DEFAULT_INPUT_SIZE;\n\t\tzlibDecompressor.outputSize = DEFAULT_OUTPUT_SIZE;\n\t\tzlibDecompressor.isDeflate64 = format === FORMAT_DEFLATE64 || format === FORMAT_DEFLATE64_RAW;\n\t\tconst isRawFormat = format === FORMAT_DEFLATE_RAW || format === FORMAT_DEFLATE64_RAW;\n\t\tzlibDecompressor.computeCRC32 = isRawFormat && computeCRC32;\n\t\tzlibDecompressor.expectedCRC32 = expectedCRC32;\n\t\tzlibDecompressor.crc32 = 0;\n\t}\n\n\tinitialize() {\n\t\tconst zlibDecompressor = this;\n\t\tzlibDecompressor.streamPtr = zlibModule[FUNC_MALLOC](STREAM_STRUCT_SIZE);\n\t\tzlibDecompressor.inputPtr = zlibModule[FUNC_MALLOC](zlibDecompressor.inputSize);\n\t\tzlibDecompressor.outputPtr = zlibModule[FUNC_MALLOC](zlibDecompressor.outputSize);\n\t\tinitStream(zlibModule, zlibDecompressor.streamPtr);\n\t\tlet result;\n\t\tif (zlibDecompressor.isDeflate64) {\n\t\t\tzlibDecompressor.windowPtr = zlibModule[FUNC_MALLOC](DEFLATE64_WINDOW_SIZE);\n\t\t\tresult = zlibModule.ccall(FUNC_INFLATE_BACK9_INIT, TYPE_NUMBER, [TYPE_NUMBER, TYPE_NUMBER, TYPE_STRING, TYPE_NUMBER], [\n\t\t\t\tzlibDecompressor.streamPtr,\n\t\t\t\tzlibDecompressor.windowPtr,\n\t\t\t\tZLIB_VERSION,\n\t\t\t\tSTREAM_STRUCT_SIZE,\n\t\t\t]);\n\t\t} else {\n\t\t\tresult = zlibModule.ccall(FUNC_INFLATE_INIT2, TYPE_NUMBER, [TYPE_NUMBER, TYPE_NUMBER, TYPE_STRING, TYPE_NUMBER], [\n\t\t\t\tzlibDecompressor.streamPtr,\n\t\t\t\tgetWindowBits(zlibDecompressor.format),\n\t\t\t\tZLIB_VERSION,\n\t\t\t\tSTREAM_STRUCT_SIZE,\n\t\t\t]);\n\t\t}\n\t\tif (result !== 0) {\n\t\t\tthrow new Error(`${MSG_DECOMPRESSION_INIT_FAILED}: ${result}`);\n\t\t}\n\t}\n\n\tdecompress(data, finish = false, flushMode = FLUSH_MODE_AUTO) {\n\t\tconst zlibDecompressor = this;\n\t\tif (data.length === 0 && !finish) {\n\t\t\treturn new Uint8Array(0);\n\t\t}\n\t\tif (zlibDecompressor.isDeflate64) {\n\t\t\treturn zlibDecompressor.decompressDeflate64(data, finish);\n\t\t}\n\t\tconst results = [];\n\t\tlet totalInputProcessed = 0;\n\t\twhile (totalInputProcessed < data.length || finish) {\n\t\t\tconst remainingInput = data.length - totalInputProcessed;\n\t\t\tconst inputChunkSize = Math.min(remainingInput, zlibDecompressor.inputSize);\n\t\t\tif (inputChunkSize > 0) {\n\t\t\t\tcopyToWasmMemory(\n\t\t\t\t\tzlibModule,\n\t\t\t\t\tdata.subarray(totalInputProcessed, totalInputProcessed + inputChunkSize),\n\t\t\t\t\tzlibDecompressor.inputPtr,\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst streamPtrU32 = zlibDecompressor.streamPtr >>> 2;\n\t\t\tzlibModule.HEAPU32[streamPtrU32 + 0] = zlibDecompressor.inputPtr;\n\t\t\tzlibModule.HEAPU32[streamPtrU32 + 1] = inputChunkSize;\n\t\t\tzlibModule.HEAPU32[streamPtrU32 + 3] = zlibDecompressor.outputPtr;\n\t\t\tzlibModule.HEAPU32[streamPtrU32 + 4] = zlibDecompressor.outputSize;\n\t\t\tconst isLastChunk = totalInputProcessed + inputChunkSize >= data.length;\n\t\t\tconst flushType = (finish && isLastChunk) ? Z_FINISH : (FLUSH_MODES[flushMode] || Z_SYNC_FLUSH);\n\t\t\tconst result = zlibModule[FUNC_INFLATE](zlibDecompressor.streamPtr, flushType);\n\t\t\tif (result < 0 && result !== Z_BUF_ERROR) {\n\t\t\t\tthrow new Error(`${MSG_DECOMPRESSION_FAILED}: ${result}`);\n\t\t\t}\n\t\t\tconst availOut = zlibModule.HEAPU32[streamPtrU32 + 4];\n\t\t\tconst outputLength = zlibDecompressor.outputSize - availOut;\n\t\t\tif (outputLength > 0) {\n\t\t\t\tconst outputChunk = copyFromWasmMemory(zlibModule, zlibDecompressor.outputPtr, outputLength);\n\t\t\t\tif (zlibDecompressor.computeCRC32) {\n\t\t\t\t\tzlibDecompressor.crc32 = zlibModule[FUNC_CRC32](zlibDecompressor.crc32, zlibDecompressor.outputPtr, outputLength);\n\t\t\t\t}\n\t\t\t\tresults.push(outputChunk);\n\t\t\t}\n\t\t\tconst inputProcessed = zlibModule.HEAPU32[streamPtrU32 + 1];\n\t\t\ttotalInputProcessed += inputChunkSize - inputProcessed;\n\t\t\tif (result === Z_STREAM_END) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (finish && isLastChunk && result !== Z_STREAM_END) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (totalInputProcessed < data.length) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tconst totalLength = results.reduce((sum, chunk) => sum + chunk.length, 0);\n\t\tconst output = new Uint8Array(totalLength);\n\t\tlet offset = 0;\n\t\tfor (const chunk of results) {\n\t\t\toutput.set(chunk, offset);\n\t\t\toffset += chunk.length;\n\t\t}\n\t\treturn output;\n\t}\n\n\tdecompressDeflate64(data, finish) {\n\t\tconst zlibDecompressor = this;\n\t\tif (zlibDecompressor.deflate64Complete) {\n\t\t\treturn new Uint8Array(0);\n\t\t}\n\t\tcopyToWasmMemory(zlibModule, data, zlibDecompressor.inputPtr);\n\t\tconst inputOffset = 0;\n\t\tconst results = [];\n\t\tconst inFunc = zlibModule.addFunction((_, bufPtr) => {\n\t\t\tif (inputOffset >= data.length) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tconst remainingBytes = data.length - inputOffset;\n\t\t\tconst currentInputPtr = zlibDecompressor.inputPtr + inputOffset;\n\t\t\tzlibModule.HEAPU32[bufPtr >>> 2] = currentInputPtr;\n\t\t\treturn remainingBytes;\n\t\t}, SIGNATURE_III);\n\t\tconst outFunc = zlibModule.addFunction((_, buf, len) => {\n\t\t\tif (len > 0) {\n\t\t\t\tif (zlibDecompressor.computeCRC32) {\n\t\t\t\t\tzlibDecompressor.crc32 = zlibModule[FUNC_CRC32](zlibDecompressor.crc32, buf, len);\n\t\t\t\t}\n\t\t\t\tconst outputChunk = copyFromWasmMemory(zlibModule, buf, len);\n\t\t\t\tresults.push(outputChunk);\n\t\t\t}\n\t\t\treturn 0;\n\t\t}, SIGNATURE_IIII);\n\t\tconst result = zlibModule.ccall(FUNC_INFLATE_BACK9, TYPE_NUMBER, [TYPE_NUMBER, TYPE_NUMBER, TYPE_NUMBER, TYPE_NUMBER, TYPE_NUMBER], [\n\t\t\tzlibDecompressor.streamPtr,\n\t\t\tinFunc,\n\t\t\t0,\n\t\t\toutFunc,\n\t\t\t0,\n\t\t]);\n\t\tzlibModule.removeFunction(inFunc);\n\t\tzlibModule.removeFunction(outFunc);\n\t\tif (result === 1) {\n\t\t\tzlibDecompressor.deflate64Complete = true;\n\t\t}\n\t\tif (result < 0) {\n\t\t\tconst msg = MSG_DEFLATE64_DECOMPRESSION_FAILED;\n\t\t\tconst errorDesc = ERROR_DESCRIPTIONS[result.toString()] || ERROR_UNKNOWN;\n\t\t\tthrow new Error(`${msg}: ${result} (${errorDesc})`);\n\t\t}\n\t\tif (finish && result !== 1 && !zlibDecompressor.deflate64Complete) {\n\t\t\tconst msg = MSG_DEFLATE64_DECOMPRESSION_INCOMPLETE;\n\t\t\tthrow new Error(`${msg}: ${result}`);\n\t\t}\n\t\tconst totalLength = results.reduce((sum, chunk) => sum + chunk.length, 0);\n\t\tconst output = new Uint8Array(totalLength);\n\t\tlet offset = 0;\n\t\tfor (const chunk of results) {\n\t\t\toutput.set(chunk, offset);\n\t\t\toffset += chunk.length;\n\t\t}\n\n\t\treturn output;\n\t}\n\n\tasync finish() {\n\t\tconst zlibDecompressor = this;\n\t\tconst finalData = await zlibDecompressor.decompress(new Uint8Array(0), true);\n\t\tzlibDecompressor.cleanup();\n\t\tif (zlibDecompressor.expectedCRC32 !== undefined && zlibDecompressor.computeCRC32 && zlibDecompressor.crc32 !== zlibDecompressor.expectedCRC32) {\n\t\t\tthrow new Error(`${MSG_CRC32_MISMATCH} ${zlibDecompressor.expectedCRC32.toString(16).toUpperCase().padStart(HEX_PAD_LENGTH, HEX_PAD_CHAR)}, got ${zlibDecompressor.crc32.toString(16).toUpperCase().padStart(HEX_PAD_LENGTH, HEX_PAD_CHAR)}`);\n\t\t}\n\t\treturn finalData;\n\t}\n\n\tcleanup() {\n\t\tconst zlibDecompressor = this;\n\t\tif (zlibModule && zlibDecompressor.streamPtr) {\n\t\t\tif (zlibDecompressor.isDeflate64) {\n\t\t\t\tzlibModule[FUNC_INFLATE_BACK9_END](zlibDecompressor.streamPtr);\n\t\t\t\tif (zlibDecompressor.windowPtr) {\n\t\t\t\t\tzlibModule[FUNC_FREE](zlibDecompressor.windowPtr);\n\t\t\t\t\tzlibDecompressor.windowPtr = null;\n\t\t\t\t}\n\t\t\t\tif (zlibDecompressor.inflateBack9InFunc) {\n\t\t\t\t\tzlibModule.removeFunction(zlibDecompressor.inflateBack9InFunc);\n\t\t\t\t\tzlibDecompressor.inflateBack9InFunc = null;\n\t\t\t\t}\n\t\t\t\tif (zlibDecompressor.inflateBack9OutFunc) {\n\t\t\t\t\tzlibModule.removeFunction(zlibDecompressor.inflateBack9OutFunc);\n\t\t\t\t\tzlibDecompressor.inflateBack9OutFunc = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tzlibModule[FUNC_INFLATE_END](zlibDecompressor.streamPtr);\n\t\t\t}\n\t\t\tzlibModule[FUNC_FREE](zlibDecompressor.streamPtr);\n\t\t\tzlibModule[FUNC_FREE](zlibDecompressor.inputPtr);\n\t\t\tzlibModule[FUNC_FREE](zlibDecompressor.outputPtr);\n\t\t\tzlibDecompressor.streamPtr = null;\n\t\t\tzlibDecompressor.inputPtr = null;\n\t\t\tzlibDecompressor.outputPtr = null;\n\t\t}\n\t}\n}\n\nclass BaseStreamPolyfill {\n\tconstructor(format, processorClass, methodName, processorArgs = []) {\n\t\tconst baseStream = this;\n\t\tbaseStream.format = format;\n\t\tbaseStream.processor = null;\n\t\tbaseStream._createTransformStream(processorClass, methodName, processorArgs);\n\t}\n\n\t_createTransformStream(ProcessorClass, methodName, processorArgs) {\n\t\tconst baseStream = this;\n\t\tconst transformStream = new TransformStream({\n\t\t\tstart: async () => {\n\t\t\t\tbaseStream.processor = new ProcessorClass(...processorArgs);\n\t\t\t\tawait baseStream.processor.initialize();\n\t\t\t},\n\t\t\ttransform: (chunk, controller) => {\n\t\t\t\tconst data = convertChunkToUint8Array(chunk);\n\t\t\t\tconst result = baseStream.processor[methodName](data, false);\n\t\t\t\tif (result.length > 0) {\n\t\t\t\t\tcontroller.enqueue(result);\n\t\t\t\t}\n\t\t\t},\n\t\t\tflush: async (controller) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst finalData = await baseStream.processor.finish();\n\t\t\t\t\tif (finalData.length > 0) {\n\t\t\t\t\t\tcontroller.enqueue(finalData);\n\t\t\t\t\t}\n\t\t\t\t\tbaseStream.processor.cleanup();\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tbaseStream.processor.cleanup();\n\t\t\t\t\t} catch (_) {\n\t\t\t\t\t\t// ignored\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.error(error);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tbaseStream.readable = transformStream.readable;\n\t\tbaseStream.writable = transformStream.writable;\n\t}\n}\n\nclass CompressionStream extends BaseStreamPolyfill {\n\tconstructor(format, options = {}) {\n\t\tconst level = options.level !== undefined ? options.level : DEFAULT_COMPRESSOR_LEVEL;\n\t\tconst computeCRC32 = options.computeCRC32 || false;\n\t\tsuper(format, ZlibCompressor, METHOD_COMPRESS, [level, format, computeCRC32]);\n\t}\n\n\tget crc32() {\n\t\treturn this.processor ? this.processor.crc32 : 0;\n\t}\n}\n\nclass DecompressionStream extends BaseStreamPolyfill {\n\tconstructor(format, options = {}) {\n\t\tconst computeCRC32 = options.expectedCRC32 !== undefined || (options.computeCRC32 !== undefined && options.computeCRC32 !== false);\n\t\tsuper(format, ZlibDecompressor, METHOD_DECOMPRESS, [format, computeCRC32, options.expectedCRC32]);\n\t}\n\n\tget crc32() {\n\t\treturn this.processor ? this.processor.crc32 : 0;\n\t}\n}\n\nexport { CompressionStream, DecompressionStream, initModule };\n\nfunction getWindowBits(format) {\n\tswitch (format) {\n\t\tcase FORMAT_DEFLATE:\n\t\t\treturn DEFLATE_WINDOW_BITS;\n\t\tcase FORMAT_DEFLATE_RAW:\n\t\t\treturn DEFLATE_RAW_WINDOW_BITS;\n\t\tcase FORMAT_GZIP:\n\t\t\treturn GZIP_WINDOW_BITS;\n\t\tdefault:\n\t\t\tthrow new Error(`${MSG_UNSUPPORTED_FORMAT}: ${format}`);\n\t}\n}\n\nfunction copyToWasmMemory(zlibModule, sourceData, targetPtr) {\n\tzlibModule.HEAPU8.set(sourceData, targetPtr);\n}\n\nfunction copyFromWasmMemory(zlibModule, sourcePtr, length) {\n\treturn zlibModule.HEAPU8.slice(sourcePtr, sourcePtr + length);\n}\n\nfunction initStream(zlibModule, streamPtr) {\n\tzlibModule.HEAPU8.fill(0, streamPtr, streamPtr + STREAM_STRUCT_SIZE);\n}\n\nfunction convertChunkToUint8Array(chunk) {\n\tif (chunk instanceof ArrayBuffer) {\n\t\treturn new Uint8Array(chunk);\n\t} else if (chunk instanceof Uint8Array) {\n\t\treturn chunk;\n\t} else if (ArrayBuffer.isView(chunk)) {\n\t\treturn new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n\t}\n}\n","export default \"\";","export default \"var ZlibModule=(()=>{var _scriptName=typeof document!=\\\"undefined\\\"?document.currentScript?.src:undefined;return async function(moduleArg={}){var moduleRtn;var b=moduleArg,aa=\\\"object\\\"==typeof window,n=\\\"undefined\\\"!=typeof WorkerGlobalScope;n&&(_scriptName=self.location.href);var q=\\\"\\\",r,v;\\nif(aa||n){try{q=(new URL(\\\".\\\",_scriptName)).href}catch{}n&&(v=a=>{var d=new XMLHttpRequest;d.open(\\\"GET\\\",a,!1);d.responseType=\\\"arraybuffer\\\";d.send(null);return new Uint8Array(d.response)});r=async a=>{if(w(a))return new Promise((c,g)=>{var k=new XMLHttpRequest;k.open(\\\"GET\\\",a,!0);k.responseType=\\\"arraybuffer\\\";k.onload=()=>{200==k.status||0==k.status&&k.response?c(k.response):g(k.status)};k.onerror=g;k.send(null)});var d=await fetch(a,{credentials:\\\"same-origin\\\"});if(d.ok)return d.arrayBuffer();throw Error(d.status+\\n\\\" : \\\"+d.url);}}var x=console.error.bind(console),y,z=!1,A,w=a=>a.startsWith(\\\"file://\\\"),B,C,F,G,H,I=!1,J=0,K=null;function L(a){b.onAbort?.(a);a=\\\"Aborted(\\\"+a+\\\")\\\";x(a);z=!0;a=new WebAssembly.RuntimeError(a+\\\". Build with -sASSERTIONS for more info.\\\");C?.(a);throw a;}var M;async function ba(a){if(!y)try{var d=await r(a);return new Uint8Array(d)}catch{}if(a==M&&y)a=new Uint8Array(y);else if(v)a=v(a);else throw\\\"both async and sync fetching of the wasm failed\\\";return a}\\nasync function ca(a,d){try{var c=await ba(a);return await WebAssembly.instantiate(c,d)}catch(g){x(`failed to asynchronously prepare wasm: ${g}`),L(g)}}async function da(a){var d=M;if(!y&&!w(d))try{var c=fetch(d,{credentials:\\\"same-origin\\\"});return await WebAssembly.instantiateStreaming(c,a)}catch(g){x(`wasm streaming compile failed: ${g}`),x(\\\"falling back to ArrayBuffer instantiation\\\")}return ca(d,a)}\\nclass N{name=\\\"ExitStatus\\\";constructor(a){this.message=`Program terminated with exit(${a})`;this.status=a}}\\nvar O=a=>{for(;0<a.length;)a.shift()(b)},P=[],Q=[],fa=()=>{var a=b.preRun.shift();Q.push(a)},R=!0,S=0,T={},ha=a=>{if(!(a instanceof N||\\\"unwind\\\"==a))throw a;},ia=a=>{A=a;R||0<S||(b.onExit?.(a),z=!0);throw new N(a);},ja=a=>{if(!z)try{if(a(),!(R||0<S))try{A=a=A,ia(a)}catch(d){ha(d)}}catch(d){ha(d)}},ka=new TextDecoder,la=a=>{const d=a.length;return[d%128|128,d>>7,...a]},ma={i:127,p:127,j:126,f:125,d:124,e:111},na=a=>la(Array.from(a,d=>ma[d])),U,V,W=[];b.noExitRuntime&&(R=b.noExitRuntime);\\nb.printErr&&(x=b.printErr);b.wasmBinary&&(y=b.wasmBinary);\\nb.ccall=(a,d,c,g)=>{var k={string:f=>{var l=0;if(null!==f&&void 0!==f&&0!==f){for(var e=l=0;e<f.length;++e){var h=f.charCodeAt(e);127>=h?l++:2047>=h?l+=2:55296<=h&&57343>=h?(l+=4,++e):l+=3}var p=l+1;e=l=X(p);h=H;if(0<p){p=e+p-1;for(var D=0;D<f.length;++D){var m=f.codePointAt(D);if(127>=m){if(e>=p)break;h[e++]=m}else if(2047>=m){if(e+1>=p)break;h[e++]=192|m>>6;h[e++]=128|m&63}else if(65535>=m){if(e+2>=p)break;h[e++]=224|m>>12;h[e++]=128|m>>6&63;h[e++]=128|m&63}else{if(e+3>=p)break;h[e++]=240|m>>18;\\nh[e++]=128|m>>12&63;h[e++]=128|m>>6&63;h[e++]=128|m&63;D++}}h[e]=0}}return l},array:f=>{var l=X(f.length);G.set(f,l);return l}};a=b[\\\"_\\\"+a];var u=[],E=0;if(g)for(var t=0;t<g.length;t++){var ea=k[c[t]];ea?(0===E&&(E=oa()),u[t]=ea(g[t])):u[t]=g[t]}c=a(...u);return c=function(f){0!==E&&pa(E);if(\\\"string\\\"===d)if(f){for(var l=f,e=H,h=l+void 0;e[l]&&!(l>=h);)++l;f=ka.decode(H.subarray(f,l))}else f=\\\"\\\";else f=\\\"boolean\\\"===d?!!f:f;return f}(c)};\\nb.addFunction=(a,d)=>{if(!V){V=new WeakMap;var c=U.length;if(V)for(var g=0;g<0+c;g++){var k=U.get(g);k&&V.set(k,g)}}if(c=V.get(a)||0)return c;c=W.length?W.pop():U.grow(1);try{U.set(c,a)}catch(u){if(!(u instanceof TypeError))throw u;d=Uint8Array.of(0,97,115,109,1,0,0,0,1,...la([1,96,...na(d.slice(1)),...na(\\\"v\\\"===d[0]?\\\"\\\":d[0])]),2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0);d=new WebAssembly.Module(d);d=(new WebAssembly.Instance(d,{e:{f:a}})).exports.f;U.set(c,d)}V.set(a,c);return c};\\nb.removeFunction=a=>{V.delete(U.get(a));U.set(a,null);W.push(a)};\\nvar qa,pa,X,oa,ra={c:()=>L(\\\"\\\"),b:()=>{R=!1;S=0},d:(a,d)=>{T[a]&&(clearTimeout(T[a].id),delete T[a]);if(!d)return 0;var c=setTimeout(()=>{delete T[a];ja(()=>qa(a,performance.now()))},d);T[a]={id:c,A:d};return 0},e:()=>{L(\\\"OOM\\\")},a:ia},Y=await (async function(){function a(c){Y=c.exports;F=Y.f;c=F.buffer;b.HEAP8=G=new Int8Array(c);new Int16Array(c);b.HEAPU8=H=new Uint8Array(c);new Uint16Array(c);b.HEAP32=new Int32Array(c);b.HEAPU32=new Uint32Array(c);new Float32Array(c);new Float64Array(c);\\nnew BigInt64Array(c);new BigUint64Array(c);U=Y.t;c=Y;b._deflate=c.g;b._deflateEnd=c.h;b._crc32=c.i;b._deflateInit2_=c.j;b._inflateInit2_=c.k;b._inflate=c.l;b._inflateEnd=c.m;b._malloc=c.n;b._free=c.o;b._inflateBack9Init_=c.p;b._inflateBack9=c.q;b._inflateBack9End=c.r;qa=c.s;pa=c.u;X=c.v;oa=c.w;J--;b.monitorRunDependencies?.(J);0==J&&K&&(c=K,K=null,c());return Y}J++;b.monitorRunDependencies?.(J);var d={a:ra};if(b.instantiateWasm)return new Promise(c=>{b.instantiateWasm(d,(g,k)=>{c(a(g,k))})});M??=\\nb.locateFile?b.locateFile(\\\"zlib-module.wasm\\\",q):q+\\\"zlib-module.wasm\\\";return a((await da(d)).instance)}());\\nfunction Z(){function a(){b.calledRun=!0;if(!z){I=!0;B?.(b);b.onRuntimeInitialized?.();if(b.postRun)for(\\\"function\\\"==typeof b.postRun&&(b.postRun=[b.postRun]);b.postRun.length;){var d=b.postRun.shift();P.push(d)}O(P)}}if(0<J)K=Z;else{if(b.preRun)for(\\\"function\\\"==typeof b.preRun&&(b.preRun=[b.preRun]);b.preRun.length;)fa();O(Q);0<J?K=Z:b.setStatus?(b.setStatus(\\\"Running...\\\"),setTimeout(()=>{setTimeout(()=>b.setStatus(\\\"\\\"),1);a()},1)):a()}}\\nif(b.preInit)for(\\\"function\\\"==typeof b.preInit&&(b.preInit=[b.preInit]);0<b.preInit.length;)b.preInit.shift()();Z();I?moduleRtn=b:moduleRtn=new Promise((a,d)=>{B=a;C=d});\\n;return moduleRtn}})();if(typeof exports===\\\"object\\\"&&typeof module===\\\"object\\\"){module.exports=ZlibModule;module.exports.default=ZlibModule}else if(typeof define===\\\"function\\\"&&define[\\\"amd\\\"])define([],()=>ZlibModule);\\n\"","import { CompressionStream, DecompressionStream, initModule } from \"./mod.js\";\nimport wasmBase64 from \"../dist-wasm/zlib-module.wasm?embed\";\nimport moduleCode from \"../dist-wasm/zlib-module.js?raw\";\n\nconst wasmBinary = Uint8Array.from(atob(wasmBase64), (c) => c.charCodeAt(0));\nawait initModule(moduleCode, wasmBinary);\n\nexport { CompressionStream, DecompressionStream };\n"],"names":["moduleCode","wasmBinary","zlibModule"],"mappings":"AAMA,MAAM,aAAa;AACnB,MAAM,kBAAkB;AACxB,MAAM,eAAe;AACrB,MAAM,eAAe;AACrB,MAAM,WAAW;AACjB,MAAM,OAAO;AACb,MAAM,eAAe;AACrB,MAAM,wBAAwB;AAC9B,MAAM,cAAc;AAGpB,MAAM,qBAAqB;AAC3B,MAAM,sBAAsB;AAC5B,MAAM,qBAAqB;AAC3B,MAAM,wBAAwB;AAG9B,MAAM,iBAAiB;AACvB,MAAM,qBAAqB;AAC3B,MAAM,cAAc;AACpB,MAAM,mBAAmB;AACzB,MAAM,uBAAuB;AAG7B,MAAM,sBAAsB;AAC5B,MAAM,0BAA0B;AAChC,MAAM,mBAAmB;AAGzB,MAAM,iBAAiB;AACvB,MAAM,oBAAoB;AAC1B,MAAM,mBAAmB;AAGzB,MAAM,gBAAgB;AACtB,MAAM,iBAAiB;AAGvB,MAAM,eAAe;AAGrB,MAAM,qBAAqB;AAC3B,MAAM,qBAAqB;AAC3B,MAAM,0BAA0B;AAChC,MAAM,qBAAqB;AAC3B,MAAM,eAAe;AACrB,MAAM,eAAe;AACrB,MAAM,mBAAmB;AACzB,MAAM,mBAAmB;AACzB,MAAM,yBAAyB;AAC/B,MAAM,cAAc;AACpB,MAAM,YAAY;AAClB,MAAM,aAAa;AAGnB,MAAM,kBAAkB;AACxB,MAAM,oBAAoB;AAG1B,MAAM,cAAc;AACpB,MAAM,cAAc;AAGpB,MAAM,kBAAkB;AACxB,MAAM,gBAAgB;AACtB,MAAM,iBAAiB;AACvB,MAAM,eAAe;AACrB,MAAM,2BAA2B;AAGjC,MAAM,qBAAqB;AAAA,EAC1B,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AACP;AAGA,MAAM,8BAA8B;AACpC,MAAM,gCAAgC;AACtC,MAAM,yBAAyB;AAC/B,MAAM,2BAA2B;AACjC,MAAM,qCAAqC;AAC3C,MAAM,yCAAyC;AAC/C,MAAM,qBAAqB;AAC3B,MAAM,0BAA0B;AAChC,MAAM,0BAA0B;AAChC,MAAM,yBAAyB;AAE/B,MAAM,cAAc;AAAA,EACnB,MAAM;AAAA,EACN,SAAS;AAAA,EACT,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,MAAM;AACP;AAEA,IAAI;AAEJ,eAAe,WAAWA,aAAYC,aAAY;AACjD,QAAM,iBAAiB,IAAI,SAAS,CAAA,GAAI,GAAGD,WAAU,oBAAoB;AACzE,QAAM,oBAAoB,eAAe,EAAE;AAC3C,eAAa,MAAM,kBAAkB,EAAE,YAAAC,aAAY;AACnD,SAAO;AACR;AAEA,MAAM,eAAe;AAAA,EACpB,YAAY,QAAQ,uBAAuB,SAAS,gBAAgB,eAAe,OAAO;AACzF,UAAM,iBAAiB;AACvB,mBAAe,QAAQ;AACvB,mBAAe,SAAS;AACxB,mBAAe,YAAY;AAC3B,mBAAe,WAAW;AAC1B,mBAAe,YAAY;AAC3B,mBAAe,YAAY;AAC3B,mBAAe,aAAa;AAC5B,UAAM,cAAc,WAAW;AAC/B,mBAAe,eAAe,eAAe;AAC7C,mBAAe,QAAQ;AAAA,EACxB;AAAA,EAEA,aAAa;AACZ,UAAM,iBAAiB;AACvB,mBAAe,YAAY,WAAW,WAAW,EAAE,kBAAkB;AACrE,mBAAe,WAAW,WAAW,WAAW,EAAE,eAAe,SAAS;AAC1E,mBAAe,YAAY,WAAW,WAAW,EAAE,eAAe,UAAU;AAC5E,eAAW,YAAY,eAAe,SAAS;AAC/C,UAAM,SAAS,WAAW,MAAM,oBAAoB,aAAa;AAAA,MAChE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACH,GAAK,CAAC,eAAe,WAAW,eAAe,OAAO,gBAAgB,cAAc,eAAe,MAAM,GAAG,mBAAmB,kBAAkB,cAAc,kBAAkB,CAAC;AAChL,QAAI,WAAW,GAAG;AACjB,YAAM,IAAI,MAAM,GAAG,2BAA2B,KAAK,MAAM,EAAE;AAAA,IAC5D;AAAA,EACD;AAAA,EAEA,SAAS,MAAM,SAAS,OAAO,YAAY,iBAAiB;AAC3D,UAAM,iBAAiB;AACvB,QAAI,KAAK,WAAW,KAAK,CAAC,QAAQ;AACjC,aAAO,IAAI,WAAW,CAAC;AAAA,IACxB;AACA,QAAI,KAAK,SAAS,eAAe,WAAW;AAC3C,YAAM,UAAU,CAAA;AAChB,UAAI,SAAS;AACb,aAAO,SAAS,KAAK,QAAQ;AAC5B,cAAM,YAAY,KAAK,IAAI,eAAe,WAAW,KAAK,SAAS,MAAM;AACzE,cAAM,QAAQ,KAAK,MAAM,QAAQ,SAAS,SAAS;AACnD,cAAM,cAAc,SAAS,aAAa,KAAK;AAC/C,cAAM,cAAc,eAAe,oBAAoB,OAAO,UAAU,aAAa,SAAS;AAC9F,YAAI,YAAY,SAAS,GAAG;AAC3B,kBAAQ,KAAK,WAAW;AAAA,QACzB;AACA,kBAAU;AAAA,MACX;AACA,YAAM,cAAc,QAAQ,OAAO,CAAC,KAAK,UAAU,MAAM,MAAM,QAAQ,CAAC;AACxE,YAAM,WAAW,IAAI,WAAW,WAAW;AAC3C,UAAI,iBAAiB;AACrB,iBAAW,UAAU,SAAS;AAC7B,iBAAS,IAAI,QAAQ,cAAc;AACnC,0BAAkB,OAAO;AAAA,MAC1B;AACA,aAAO;AAAA,IACR;AACA,WAAO,eAAe,oBAAoB,MAAM,QAAQ,SAAS;AAAA,EAClE;AAAA,EAEA,oBAAoB,MAAM,SAAS,OAAO,YAAY,iBAAiB;AACtE,UAAM,iBAAiB;AACvB,QAAI,KAAK,SAAS,eAAe,WAAW;AAC3C,YAAM,IAAI,MAAM,GAAG,uBAAuB,IAAI,KAAK,MAAM,IAAI,uBAAuB,IAAI,eAAe,SAAS,EAAE;AAAA,IACnH;AACA,QAAI,eAAe,UAAU,KAAK,eAAe,WAAW,oBAAoB;AAC/E,UAAI,eAAe,gBAAgB,KAAK,SAAS,GAAG;AACnD,cAAM,UAAU,WAAW,WAAW,EAAE,KAAK,MAAM;AACnD,YAAI;AACH,qBAAW,OAAO,IAAI,MAAM,OAAO;AACnC,yBAAe,QAAQ,WAAW,UAAU,EAAE,eAAe,OAAO,SAAS,KAAK,MAAM;AAAA,QACzF,UAAC;AACA,qBAAW,SAAS,EAAE,OAAO;AAAA,QAC9B;AAAA,MACD;AACA,aAAO;AAAA,IACR;AAEA,qBAAiB,YAAY,MAAM,eAAe,QAAQ;AAC1D,QAAI,eAAe,gBAAgB,KAAK,SAAS,GAAG;AACnD,qBAAe,QAAQ,WAAW,UAAU,EAAE,eAAe,OAAO,eAAe,UAAU,KAAK,MAAM;AAAA,IACzG;AACA,UAAM,eAAe,eAAe,cAAc;AAClD,eAAW,QAAQ,eAAe,CAAC,IAAI,eAAe;AACtD,eAAW,QAAQ,eAAe,CAAC,IAAI,KAAK;AAC5C,eAAW,QAAQ,eAAe,CAAC,IAAI,eAAe;AACtD,eAAW,QAAQ,eAAe,CAAC,IAAI,eAAe;AACtD,UAAM,YAAY,SAAS,WAAY,YAAY,SAAS,KAAK;AACjE,UAAM,SAAS,WAAW,YAAY,EAAE,eAAe,WAAW,SAAS;AAC3E,QAAI,SAAS,KAAM,UAAU,WAAW,gBAAkB,CAAC,UAAU,WAAW,MAAO;AACtF,YAAM,IAAI,MAAM,GAAG,sBAAsB,KAAK,MAAM,EAAE;AAAA,IACvD;AACA,UAAM,WAAW,WAAW,QAAQ,eAAe,CAAC;AACpD,UAAM,eAAe,eAAe,aAAa;AACjD,WAAO,mBAAmB,YAAY,eAAe,WAAW,YAAY;AAAA,EAC7E;AAAA,EAEA,MAAM,SAAS;AACd,UAAM,iBAAiB;AACvB,UAAM,YAAY,MAAM,eAAe,SAAS,IAAI,WAAW,CAAC,GAAG,IAAI;AACvE,mBAAe,QAAO;AACtB,WAAO;AAAA,EACR;AAAA,EAEA,UAAU;AACT,UAAM,iBAAiB;AACvB,QAAI,cAAc,eAAe,WAAW;AAC3C,iBAAW,gBAAgB,EAAE,eAAe,SAAS;AACrD,iBAAW,SAAS,EAAE,eAAe,SAAS;AAC9C,iBAAW,SAAS,EAAE,eAAe,QAAQ;AAC7C,iBAAW,SAAS,EAAE,eAAe,SAAS;AAC9C,qBAAe,YAAY;AAC3B,qBAAe,WAAW;AAC1B,qBAAe,YAAY;AAAA,IAC5B;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,YAAY,SAAS,gBAAgB,eAAe,OAAO,eAAe;AACzE,UAAM,mBAAmB;AACzB,qBAAiB,SAAS;AAC1B,qBAAiB,YAAY;AAC7B,qBAAiB,WAAW;AAC5B,qBAAiB,YAAY;AAC7B,qBAAiB,YAAY;AAC7B,qBAAiB,YAAY;AAC7B,qBAAiB,aAAa;AAC9B,qBAAiB,cAAc,WAAW,oBAAoB,WAAW;AACzE,UAAM,cAAc,WAAW,sBAAsB,WAAW;AAChE,qBAAiB,eAAe,eAAe;AAC/C,qBAAiB,gBAAgB;AACjC,qBAAiB,QAAQ;AAAA,EAC1B;AAAA,EAEA,aAAa;AACZ,UAAM,mBAAmB;AACzB,qBAAiB,YAAY,WAAW,WAAW,EAAE,kBAAkB;AACvE,qBAAiB,WAAW,WAAW,WAAW,EAAE,iBAAiB,SAAS;AAC9E,qBAAiB,YAAY,WAAW,WAAW,EAAE,iBAAiB,UAAU;AAChF,eAAW,YAAY,iBAAiB,SAAS;AACjD,QAAI;AACJ,QAAI,iBAAiB,aAAa;AACjC,uBAAiB,YAAY,WAAW,WAAW,EAAE,qBAAqB;AAC1E,eAAS,WAAW,MAAM,yBAAyB,aAAa,CAAC,aAAa,aAAa,aAAa,WAAW,GAAG;AAAA,QACrH,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB;AAAA,QACA;AAAA,MACJ,CAAI;AAAA,IACF,OAAO;AACN,eAAS,WAAW,MAAM,oBAAoB,aAAa,CAAC,aAAa,aAAa,aAAa,WAAW,GAAG;AAAA,QAChH,iBAAiB;AAAA,QACjB,cAAc,iBAAiB,MAAM;AAAA,QACrC;AAAA,QACA;AAAA,MACJ,CAAI;AAAA,IACF;AACA,QAAI,WAAW,GAAG;AACjB,YAAM,IAAI,MAAM,GAAG,6BAA6B,KAAK,MAAM,EAAE;AAAA,IAC9D;AAAA,EACD;AAAA,EAEA,WAAW,MAAM,SAAS,OAAO,YAAY,iBAAiB;AAC7D,UAAM,mBAAmB;AACzB,QAAI,KAAK,WAAW,KAAK,CAAC,QAAQ;AACjC,aAAO,IAAI,WAAW,CAAC;AAAA,IACxB;AACA,QAAI,iBAAiB,aAAa;AACjC,aAAO,iBAAiB,oBAAoB,MAAM,MAAM;AAAA,IACzD;AACA,UAAM,UAAU,CAAA;AAChB,QAAI,sBAAsB;AAC1B,WAAO,sBAAsB,KAAK,UAAU,QAAQ;AACnD,YAAM,iBAAiB,KAAK,SAAS;AACrC,YAAM,iBAAiB,KAAK,IAAI,gBAAgB,iBAAiB,SAAS;AAC1E,UAAI,iBAAiB,GAAG;AACvB;AAAA,UACC;AAAA,UACA,KAAK,SAAS,qBAAqB,sBAAsB,cAAc;AAAA,UACvE,iBAAiB;AAAA,QACtB;AAAA,MACG;AACA,YAAM,eAAe,iBAAiB,cAAc;AACpD,iBAAW,QAAQ,eAAe,CAAC,IAAI,iBAAiB;AACxD,iBAAW,QAAQ,eAAe,CAAC,IAAI;AACvC,iBAAW,QAAQ,eAAe,CAAC,IAAI,iBAAiB;AACxD,iBAAW,QAAQ,eAAe,CAAC,IAAI,iBAAiB;AACxD,YAAM,cAAc,sBAAsB,kBAAkB,KAAK;AACjE,YAAM,YAAa,UAAU,cAAe,WAAY,YAAY,SAAS,KAAK;AAClF,YAAM,SAAS,WAAW,YAAY,EAAE,iBAAiB,WAAW,SAAS;AAC7E,UAAI,SAAS,KAAK,WAAW,aAAa;AACzC,cAAM,IAAI,MAAM,GAAG,wBAAwB,KAAK,MAAM,EAAE;AAAA,MACzD;AACA,YAAM,WAAW,WAAW,QAAQ,eAAe,CAAC;AACpD,YAAM,eAAe,iBAAiB,aAAa;AACnD,UAAI,eAAe,GAAG;AACrB,cAAM,cAAc,mBAAmB,YAAY,iBAAiB,WAAW,YAAY;AAC3F,YAAI,iBAAiB,cAAc;AAClC,2BAAiB,QAAQ,WAAW,UAAU,EAAE,iBAAiB,OAAO,iBAAiB,WAAW,YAAY;AAAA,QACjH;AACA,gBAAQ,KAAK,WAAW;AAAA,MACzB;AACA,YAAM,iBAAiB,WAAW,QAAQ,eAAe,CAAC;AAC1D,6BAAuB,iBAAiB;AACxC,UAAI,WAAW,cAAc;AAC5B;AAAA,MACD;AACA,UAAI,UAAU,eAAe,WAAW,cAAc;AACrD;AAAA,MACD;AACA,UAAI,sBAAsB,KAAK,QAAQ;AACtC;AAAA,MACD;AACA;AAAA,IACD;AACA,UAAM,cAAc,QAAQ,OAAO,CAAC,KAAK,UAAU,MAAM,MAAM,QAAQ,CAAC;AACxE,UAAM,SAAS,IAAI,WAAW,WAAW;AACzC,QAAI,SAAS;AACb,eAAW,SAAS,SAAS;AAC5B,aAAO,IAAI,OAAO,MAAM;AACxB,gBAAU,MAAM;AAAA,IACjB;AACA,WAAO;AAAA,EACR;AAAA,EAEA,oBAAoB,MAAM,QAAQ;AACjC,UAAM,mBAAmB;AACzB,QAAI,iBAAiB,mBAAmB;AACvC,aAAO,IAAI,WAAW,CAAC;AAAA,IACxB;AACA,qBAAiB,YAAY,MAAM,iBAAiB,QAAQ;AAC5D,UAAM,cAAc;AACpB,UAAM,UAAU,CAAA;AAChB,UAAM,SAAS,WAAW,YAAY,CAAC,GAAG,WAAW;AACpD,UAAI,eAAe,KAAK,QAAQ;AAC/B,eAAO;AAAA,MACR;AACA,YAAM,iBAAiB,KAAK,SAAS;AACrC,YAAM,kBAAkB,iBAAiB,WAAW;AACpD,iBAAW,QAAQ,WAAW,CAAC,IAAI;AACnC,aAAO;AAAA,IACR,GAAG,aAAa;AAChB,UAAM,UAAU,WAAW,YAAY,CAAC,GAAG,KAAK,QAAQ;AACvD,UAAI,MAAM,GAAG;AACZ,YAAI,iBAAiB,cAAc;AAClC,2BAAiB,QAAQ,WAAW,UAAU,EAAE,iBAAiB,OAAO,KAAK,GAAG;AAAA,QACjF;AACA,cAAM,cAAc,mBAAmB,YAAY,KAAK,GAAG;AAC3D,gBAAQ,KAAK,WAAW;AAAA,MACzB;AACA,aAAO;AAAA,IACR,GAAG,cAAc;AACjB,UAAM,SAAS,WAAW,MAAM,oBAAoB,aAAa,CAAC,aAAa,aAAa,aAAa,aAAa,WAAW,GAAG;AAAA,MACnI,iBAAiB;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACH,CAAG;AACD,eAAW,eAAe,MAAM;AAChC,eAAW,eAAe,OAAO;AACjC,QAAI,WAAW,GAAG;AACjB,uBAAiB,oBAAoB;AAAA,IACtC;AACA,QAAI,SAAS,GAAG;AACf,YAAM,MAAM;AACZ,YAAM,YAAY,mBAAmB,OAAO,SAAQ,CAAE,KAAK;AAC3D,YAAM,IAAI,MAAM,GAAG,GAAG,KAAK,MAAM,KAAK,SAAS,GAAG;AAAA,IACnD;AACA,QAAI,UAAU,WAAW,KAAK,CAAC,iBAAiB,mBAAmB;AAClE,YAAM,MAAM;AACZ,YAAM,IAAI,MAAM,GAAG,GAAG,KAAK,MAAM,EAAE;AAAA,IACpC;AACA,UAAM,cAAc,QAAQ,OAAO,CAAC,KAAK,UAAU,MAAM,MAAM,QAAQ,CAAC;AACxE,UAAM,SAAS,IAAI,WAAW,WAAW;AACzC,QAAI,SAAS;AACb,eAAW,SAAS,SAAS;AAC5B,aAAO,IAAI,OAAO,MAAM;AACxB,gBAAU,MAAM;AAAA,IACjB;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,SAAS;AACd,UAAM,mBAAmB;AACzB,UAAM,YAAY,MAAM,iBAAiB,WAAW,IAAI,WAAW,CAAC,GAAG,IAAI;AAC3E,qBAAiB,QAAO;AACxB,QAAI,iBAAiB,kBAAkB,UAAa,iBAAiB,gBAAgB,iBAAiB,UAAU,iBAAiB,eAAe;AAC/I,YAAM,IAAI,MAAM,GAAG,kBAAkB,IAAI,iBAAiB,cAAc,SAAS,EAAE,EAAE,YAAW,EAAG,SAAS,gBAAgB,YAAY,CAAC,SAAS,iBAAiB,MAAM,SAAS,EAAE,EAAE,YAAW,EAAG,SAAS,gBAAgB,YAAY,CAAC,EAAE;AAAA,IAC7O;AACA,WAAO;AAAA,EACR;AAAA,EAEA,UAAU;AACT,UAAM,mBAAmB;AACzB,QAAI,cAAc,iBAAiB,WAAW;AAC7C,UAAI,iBAAiB,aAAa;AACjC,mBAAW,sBAAsB,EAAE,iBAAiB,SAAS;AAC7D,YAAI,iBAAiB,WAAW;AAC/B,qBAAW,SAAS,EAAE,iBAAiB,SAAS;AAChD,2BAAiB,YAAY;AAAA,QAC9B;AACA,YAAI,iBAAiB,oBAAoB;AACxC,qBAAW,eAAe,iBAAiB,kBAAkB;AAC7D,2BAAiB,qBAAqB;AAAA,QACvC;AACA,YAAI,iBAAiB,qBAAqB;AACzC,qBAAW,eAAe,iBAAiB,mBAAmB;AAC9D,2BAAiB,sBAAsB;AAAA,QACxC;AAAA,MACD,OAAO;AACN,mBAAW,gBAAgB,EAAE,iBAAiB,SAAS;AAAA,MACxD;AACA,iBAAW,SAAS,EAAE,iBAAiB,SAAS;AAChD,iBAAW,SAAS,EAAE,iBAAiB,QAAQ;AAC/C,iBAAW,SAAS,EAAE,iBAAiB,SAAS;AAChD,uBAAiB,YAAY;AAC7B,uBAAiB,WAAW;AAC5B,uBAAiB,YAAY;AAAA,IAC9B;AAAA,EACD;AACD;AAEA,MAAM,mBAAmB;AAAA,EACxB,YAAY,QAAQ,gBAAgB,YAAY,gBAAgB,CAAA,GAAI;AACnE,UAAM,aAAa;AACnB,eAAW,SAAS;AACpB,eAAW,YAAY;AACvB,eAAW,uBAAuB,gBAAgB,YAAY,aAAa;AAAA,EAC5E;AAAA,EAEA,uBAAuB,gBAAgB,YAAY,eAAe;AACjE,UAAM,aAAa;AACnB,UAAM,kBAAkB,IAAI,gBAAgB;AAAA,MAC3C,OAAO,YAAY;AAClB,mBAAW,YAAY,IAAI,eAAe,GAAG,aAAa;AAC1D,cAAM,WAAW,UAAU,WAAU;AAAA,MACtC;AAAA,MACA,WAAW,CAAC,OAAO,eAAe;AACjC,cAAM,OAAO,yBAAyB,KAAK;AAC3C,cAAM,SAAS,WAAW,UAAU,UAAU,EAAE,MAAM,KAAK;AAC3D,YAAI,OAAO,SAAS,GAAG;AACtB,qBAAW,QAAQ,MAAM;AAAA,QAC1B;AAAA,MACD;AAAA,MACA,OAAO,OAAO,eAAe;AAC5B,YAAI;AACH,gBAAM,YAAY,MAAM,WAAW,UAAU,OAAM;AACnD,cAAI,UAAU,SAAS,GAAG;AACzB,uBAAW,QAAQ,SAAS;AAAA,UAC7B;AACA,qBAAW,UAAU,QAAO;AAAA,QAC7B,SAAS,OAAO;AACf,cAAI;AACH,uBAAW,UAAU,QAAO;AAAA,UAC7B,SAAS,GAAG;AAAA,UAEZ;AACA,qBAAW,MAAM,KAAK;AAAA,QACvB;AAAA,MACD;AAAA,IACH,CAAG;AACD,eAAW,WAAW,gBAAgB;AACtC,eAAW,WAAW,gBAAgB;AAAA,EACvC;AACD;AAEA,MAAM,0BAA0B,mBAAmB;AAAA,EAClD,YAAY,QAAQ,UAAU,IAAI;AACjC,UAAM,QAAQ,QAAQ,UAAU,SAAY,QAAQ,QAAQ;AAC5D,UAAM,eAAe,QAAQ,gBAAgB;AAC7C,UAAM,QAAQ,gBAAgB,iBAAiB,CAAC,OAAO,QAAQ,YAAY,CAAC;AAAA,EAC7E;AAAA,EAEA,IAAI,QAAQ;AACX,WAAO,KAAK,YAAY,KAAK,UAAU,QAAQ;AAAA,EAChD;AACD;AAEA,MAAM,4BAA4B,mBAAmB;AAAA,EACpD,YAAY,QAAQ,UAAU,IAAI;AACjC,UAAM,eAAe,QAAQ,kBAAkB,UAAc,QAAQ,iBAAiB,UAAa,QAAQ,iBAAiB;AAC5H,UAAM,QAAQ,kBAAkB,mBAAmB,CAAC,QAAQ,cAAc,QAAQ,aAAa,CAAC;AAAA,EACjG;AAAA,EAEA,IAAI,QAAQ;AACX,WAAO,KAAK,YAAY,KAAK,UAAU,QAAQ;AAAA,EAChD;AACD;AAIA,SAAS,cAAc,QAAQ;AAC9B,UAAQ,QAAM;AAAA,IACb,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AACJ,aAAO;AAAA,IACR;AACC,YAAM,IAAI,MAAM,GAAG,sBAAsB,KAAK,MAAM,EAAE;AAAA,EACzD;AACA;AAEA,SAAS,iBAAiBC,aAAY,YAAY,WAAW;AAC5D,EAAAA,YAAW,OAAO,IAAI,YAAY,SAAS;AAC5C;AAEA,SAAS,mBAAmBA,aAAY,WAAW,QAAQ;AAC1D,SAAOA,YAAW,OAAO,MAAM,WAAW,YAAY,MAAM;AAC7D;AAEA,SAAS,WAAWA,aAAY,WAAW;AAC1C,EAAAA,YAAW,OAAO,KAAK,GAAG,WAAW,YAAY,kBAAkB;AACpE;AAEA,SAAS,yBAAyB,OAAO;AACxC,MAAI,iBAAiB,aAAa;AACjC,WAAO,IAAI,WAAW,KAAK;AAAA,EAC5B,WAAW,iBAAiB,YAAY;AACvC,WAAO;AAAA,EACR,WAAW,YAAY,OAAO,KAAK,GAAG;AACrC,WAAO,IAAI,WAAW,MAAM,QAAQ,MAAM,YAAY,MAAM,UAAU;AAAA,EACvE;AACD;ACpiBA,MAAA,aAAe;ACAf,MAAA,aAAe;ACIf,MAAM,aAAa,WAAW,KAAK,KAAK,UAAU,GAAG,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;AAC3E,MAAM,WAAW,YAAY,UAAU;"}